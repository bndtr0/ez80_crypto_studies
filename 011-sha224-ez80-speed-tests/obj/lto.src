	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -18
	call	__frameset
	ld	hl, _.str
	ld	de, _.str.1
	push	de
	push	hl
	call	_fopen
	ld	(ix - 3), hl
	pop	hl
	pop	hl
	ld	hl, _str
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.17
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.18
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.19
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.20
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.21
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 43
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 23
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 62
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 62
	push	hl
	ld	hl, _.str.5
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 62
	push	hl
	ld	hl, _.str.6
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 63
	push	hl
	ld	hl, _.str.7
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _str.22
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.35
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.8
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, 1011
	ld	bc, 1
BB0_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	z, BB0_3
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s0
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha224_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	ld	de, 1011
	jp	BB0_1
BB0_3:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.25
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.35
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.12
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_4:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_6
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s1
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha224_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_4
BB0_6:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.28
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.35
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.13
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_7:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_9
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s2
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha224_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_7
BB0_9:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.31
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.35
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.14
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_10:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_12
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s3
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha224_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_10
BB0_12:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.34
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.35
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.15
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_13:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_15
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s4
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha224_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_13
BB0_15:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.37
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.16
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fclose
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12micros_setupv
__Z12micros_setupv:
	ld	hl, 12
	push	hl
	ld	hl, -113
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, -112
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, -111
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	ld	a, -1
	ld	(_TMR5_COUNTER_UPPER), a
	ld	hl, 31
	push	hl
	ld	hl, -113
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11micros_stopv
__Z11micros_stopv:
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, -113
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z6microsv
__Z6microsv:
	ld	hl, -2
	call	__frameset
	ld	hl, -112
	push	hl
	call	_mos_port_read
	ld	(ix - 1), a
	pop	hl
	ld	hl, -111
	push	hl
	call	_mos_port_read
	ld	(ix - 2), a
	pop	hl
	call	__Z12updateMicrosv
	ld	a, (_TMR5_COUNTER_UPPER)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	c, 16
	call	__ishl
	push	hl
	pop	iy
	ld	de, 0
	ld	e, (ix - 2)
	ld	c, 8
	push	de
	pop	hl
	call	__ishl
	push	hl
	pop	bc
	add	iy, bc
	ld	e, (ix - 1)
	add	iy, de
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12updateMicrosv
__Z12updateMicrosv:
	ld	hl, -113
	push	hl
	call	_mos_port_read
	pop	hl
	cp	a, 0
	call	pe, __setflag
	jp	p, BB4_2
	ld	hl, _TMR5_COUNTER_UPPER
	dec	(hl)
BB4_2:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z19NumTools_toHexDigith
__Z19NumTools_toHexDigith:
	call	__frameset0
	ld	a, (ix + 6)
	and	a, 15
	ld	c, a
	add	a, 48
	ld	l, a
	ld	a, c
	add	a, 87
	ld	e, a
	ld	a, c
	cp	a, 10
	jr	c, BB5_2
	ld	l, e
BB5_2:
	ld	a, l
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z14NumTools_toHexmh
__Z14NumTools_toHexmh:
	ld	hl, -2
	call	__frameset
	ld	l, (ix + 12)
	ld	e, 0
	ld	a, l
	cp	a, 8
	ld	h, l
	jr	c, BB6_2
	ld	h, 8
BB6_2:
	ld	a, e
	ld	(_nmtmp0+8), a
	inc	h
	ld	a, l
	or	a, a
	jr	nz, BB6_4
	ld	h, 2
BB6_4:
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	iy, _nmtmp0+8
	ld	de, 0
	ld	e, h
BB6_5:
	dec	de
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB6_9
	ld	(ix - 1), a
	ld	a, c
	and	a, 15
	ld	h, a
	add	a, 48
	ld	l, a
	ld	a, h
	add	a, 87
	ld	(ix - 2), a
	ld	a, h
	cp	a, 10
	jr	c, BB6_8
	ld	l, (ix - 2)
BB6_8:
	ld	(iy - 1), l
	dec	iy
	ld	a, (ix - 1)
	ld	l, 4
	call	__lshru
	jr	BB6_5
BB6_9:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15NumTools_toHex2h
__Z15NumTools_toHex2h:
	call	__frameset0
	ld	a, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	de, 2
	push	de
	push	hl
	ld	l, a
	push	hl
	call	__Z14NumTools_toHexmh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15NumTools_toHex4j
__Z15NumTools_toHex4j:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, 4
	push	de
	ld	de, 0
	push	de
	push	hl
	call	__Z14NumTools_toHexmh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15NumTools_toHex8m
__Z15NumTools_toHex8m:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	ld	de, 8
	push	de
	ld	e, a
	push	de
	push	hl
	call	__Z14NumTools_toHexmh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z22NumTools_toHex8Reversem
__Z22NumTools_toHex8Reversem:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	ld	(ix - 3), hl
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	dec	de
	ld	bc, 0
	ld	iy, _nmtmp1
BB10_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB10_3
	ld	hl, (ix - 3)
	add	hl, de
	ld	a, (hl)
	ld	(iy), a
	inc	iy
	dec	de
	jr	BB10_1
BB10_3:
	ld	(iy), 0
	ld	hl, _nmtmp1
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z25NumTools_toHex8Reverse_2bm
__Z25NumTools_toHex8Reverse_2bm:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	push	hl
	pop	iy
	pop	hl
	pop	hl
	ld	a, (iy + 6)
	ld	(_nmtmp1), a
	ld	a, (iy + 7)
	ld	(_nmtmp1+1), a
	ld	a, (iy + 4)
	ld	(_nmtmp1+2), a
	ld	a, (iy + 5)
	ld	(_nmtmp1+3), a
	ld	a, (iy + 2)
	ld	(_nmtmp1+4), a
	ld	a, (iy + 3)
	ld	(_nmtmp1+5), a
	ld	a, (iy)
	ld	(_nmtmp1+6), a
	ld	a, (iy + 1)
	ld	(_nmtmp1+7), a
	xor	a, a
	ld	(_nmtmp1+8), a
	ld	hl, _nmtmp1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z23NumTools_printArray_tuiPcPmjhih
__Z23NumTools_printArray_tuiPcPmjhih:
	ld	hl, -11
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	(ix - 3), de
	ld	de, (ix + 12)
	ld	(ix - 6), de
	ld	a, (ix + 15)
	ld	(ix - 7), a
	ld	de, (ix + 18)
	ld	(ix - 10), de
	ld	a, (ix + 21)
	ld	(ix - 11), a
	push	hl
	call	_puts
	pop	hl
	ld	hl, _.str.1.7
	push	hl
	call	_printf
	pop	hl
	ld	hl, (ix - 3)
	ld	(ix + 6), hl
	ld	hl, (ix - 6)
	ld	(ix + 9), hl
	ld	a, (ix - 7)
	ld	(ix + 12), a
	ld	hl, (ix - 10)
	ld	(ix + 15), hl
	ld	a, (ix - 11)
	ld	(ix + 18), a
	ld	sp, ix
	pop	ix
	jp	__Z22NumTools_printArray_uiPmihih
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z22NumTools_printArray_uiPmihih
__Z22NumTools_printArray_uiPmihih:
	ld	hl, -16
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	hl, (ix + 15)
	ld	(ix - 15), hl
	ld	l, (ix + 18)
	ld	(ix - 16), l
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	de, 1
	push	bc
	pop	hl
	sbc	hl, de
	ld	hl, 0
	call	pe, __setflag
	jp	p, BB13_2
	push	hl
	pop	bc
BB13_2:
	ld	de, (ix - 3)
	ld	e, a
	ld	(ix - 3), de
	ld	(ix - 6), hl
BB13_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB13_15
	ld	hl, (ix - 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), iy
	ld	(ix - 12), bc
	jr	nz, BB13_6
	ld	hl, (iy)
	ld	e, (iy + 3)
	push	de
	push	hl
	ld	hl, _.str.6.10
	push	hl
	call	_printf
	pop	hl
	pop	hl
	jr	BB13_12
BB13_6:
	ld	a, (ix - 16)
	cp	a, 2
	jr	nz, BB13_8
	ld	l, (iy)
	push	hl
	call	__Z15NumTools_toHex2h
	jr	BB13_11
BB13_8:
	cp	a, 4
	jr	nz, BB13_10
	ld	hl, (iy)
	push	hl
	call	__Z15NumTools_toHex4j
	jr	BB13_11
BB13_10:
	ld	hl, (iy)
	ld	e, (iy + 3)
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
BB13_11:
	pop	de
	push	hl
	ld	hl, _.str.2.8
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	hl, _.str.5.9
	push	hl
	call	_printf
BB13_12:
	pop	hl
	ld	bc, (ix - 6)
	inc	bc
	push	bc
	pop	hl
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB13_14
	ld	hl, _.str.4.11
	push	hl
	call	_printf
	pop	hl
	ld	bc, 0
BB13_14:
	ld	(ix - 6), bc
	ld	iy, (ix - 9)
	lea	iy, iy + 4
	ld	bc, (ix - 12)
	dec	bc
	jp	BB13_3
BB13_15:
	ld	hl, 10
	ld	(ix + 6), hl
	ld	sp, ix
	pop	ix
	jp	_putchar
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z21NumTools_printArray_bPhihi
__Z21NumTools_printArray_bPhihi:
	ld	hl, -12
	call	__frameset
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	iy, 0
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB14_2
	lea	bc, iy
BB14_2:
	ld	hl, (ix + 6)
	ld	(ix - 3), hl
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	(ix - 12), hl
	ld	(ix - 6), iy
BB14_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB14_10
	ld	(ix - 9), bc
	ld	hl, (ix - 3)
	ld	a, (hl)
	ld	hl, (ix + 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB14_6
	ex	de, hl
	ld	l, a
	push	hl
	ld	hl, _.str.3.12
	jr	BB14_7
BB14_6:
	ld	l, a
	push	hl
	call	__Z15NumTools_toHex2h
	pop	de
	push	hl
	ld	hl, _.str.2.8
BB14_7:
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	bc, (ix - 6)
	inc	bc
	push	bc
	pop	hl
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB14_9
	ld	hl, _.str.4.11
	push	hl
	call	_printf
	ld	bc, 0
	pop	hl
BB14_9:
	ld	(ix - 6), bc
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	bc, (ix - 9)
	dec	bc
	ld	iy, 0
	lea	de, iy
	jr	BB14_3
BB14_10:
	ld	hl, _.str.4.11
	push	hl
	call	_printf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11sha224_hashPhl
__Z11sha224_hashPhl:
	ld	hl, -30
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 30), hl
	ld	hl, (ix + 9)
	ld	e, (ix + 12)
	ld	iy, 0
	ld	bc, 1
	xor	a, a
	ld	d, 54
	ld	(_lastBlock), iy
	ld	(ix - 26), hl
	ld	(ix - 27), e
	call	__lcmps
	call	pe, __setflag
	ld	hl, 1
	jp	m, BB15_2
	ld	hl, 0
BB15_2:
	ld	(_usePadding), hl
	ld	(_paddingFirstByte), hl
	ld	bc, 0
	ld	(_paddingRemainingBytes), bc
	ld	(_paddingRemainingBytes+3), a
	ld	hl, 368344
	ld	(_h), hl
	ld	a, -63
	ld	(_h+3), a
	ld	hl, 8180999
	ld	(_h+4), hl
	ld	a, d
	ld	(_h+7), a
	ld	hl, 7396631
	ld	(_h+8), hl
	ld	a, 48
	ld	(_h+11), a
	ld	hl, 940345
	ld	(_h+12), hl
	ld	a, -9
	ld	(_h+15), a
	ld	hl, -4191439
	ld	(_h+16), hl
	ld	a, -1
	ld	(_h+19), a
	ld	hl, 5772561
	ld	(_h+20), hl
	ld	a, 104
	ld	(_h+23), a
	ld	hl, -421977
	ld	(_h+24), hl
	ld	a, 100
	ld	(_h+27), a
	ld	hl, -372828
	ld	(_h+28), hl
	ld	a, -66
	ld	(_h+31), a
	push	bc
	pop	hl
	ld	(ix - 12), bc
BB15_3:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB15_26
	ld	de, 0
	ld	(ix - 6), de
BB15_5:
	ld	(ix - 3), de
	ex	de, hl
	ld	de, 64
	or	a, a
	sbc	hl, de
	jp	z, BB15_19
	call	__Z12updateMicrosv
	ld	hl, (_usePadding)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB15_11
	ld	hl, (ix - 30)
	ld	bc, (ix - 12)
	add	hl, bc
	inc	bc
	ld	a, (hl)
	ld	hl, _block64
	ld	de, (ix - 3)
	add	hl, de
	ld	(hl), a
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	iy
	ld	hl, (ix - 26)
	ld	e, (ix - 27)
	ld	a, iyl
	call	__lcmpu
	jp	nz, BB15_17
	ld	hl, 1
	ld	(_usePadding), hl
	ld	(_paddingFirstByte), hl
	ld	hl, (ix - 3)
	ld	de, 55
	or	a, a
	sbc	hl, de
	ld	hl, 55
	jr	c, BB15_10
	ld	hl, 119
BB15_10:
	ld	de, (ix - 6)
	add	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	push	de
	pop	iy
	sbc	hl, hl
	push	hl
	pop	de
	jp	BB15_16
BB15_11:
	ld	hl, (_paddingFirstByte)
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB15_13
	or	a, a
	sbc	hl, hl
	ld	(_paddingFirstByte), hl
	ld	hl, _block64
	ld	de, (ix - 3)
	add	hl, de
	ld	(hl), -128
	ld	hl, (_paddingRemainingBytes)
	ld	a, (_paddingRemainingBytes+3)
	jr	BB15_15
BB15_13:
	ld	hl, (_paddingRemainingBytes)
	ld	a, (_paddingRemainingBytes+3)
	ld	e, a
	call	__lcmpzero
	jp	z, BB15_18
	ld	iy, _block64
	ld	de, (ix - 3)
	add	iy, de
	ld	(iy), 0
BB15_15:
	ld	e, a
	ld	bc, -1
	ld	a, b
	call	__ladd
	push	hl
	pop	iy
	ld	bc, (ix - 12)
BB15_16:
	ld	(_paddingRemainingBytes), iy
	ld	a, e
	ld	(_paddingRemainingBytes+3), a
BB15_17:
	ld	de, (ix - 3)
	inc	de
	ld	hl, (ix - 6)
	dec	hl
	ld	(ix - 6), hl
	ld	(ix - 12), bc
	jp	BB15_5
BB15_18:
	ld	hl, 1
	ld	(_lastBlock), hl
	ld	de, (ix - 26)
	ld	a, e
	ld	b, 3
	call	__bshl
	ld	(_block64+63), a
	push	de
	pop	bc
	ld	h, (ix - 27)
	ld	a, h
	ld	l, 5
	call	__lshru
	ld	a, c
	ld	(_block64+62), a
	push	de
	pop	bc
	ld	a, h
	ld	l, 13
	call	__lshru
	ld	a, c
	ld	(_block64+61), a
	push	de
	pop	bc
	ld	a, h
	ld	l, 21
	call	__lshru
	ld	a, c
	ld	(_block64+60), a
	push	de
	pop	bc
	ld	a, h
	ld	l, 29
	call	__lshrs
	ld	(ix - 27), a
	ld	a, c
	ld	(_block64+56), a
	ld	(_block64+57), a
	ld	(_block64+58), a
	ld	(ix - 26), bc
	ld	(_block64+59), a
BB15_19:
	ld	iy, 0
BB15_20:
	lea	hl, iy
	ld	de, 64
	or	a, a
	sbc	hl, de
	jp	z, BB15_22
	lea	bc, iy
	ld	(ix - 6), bc
	ld	(ix - 3), iy
	ld	iy, _block64+3
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	(ix - 15), hl
	ld	d, h
	ld	hl, _M
	add	hl, bc
	ld	(ix - 9), hl
	ld	bc, 0
	ld	c, (iy - 1)
	ld	a, d
	ld	l, 8
	call	__lshl
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 15)
	ld	a, d
	call	__ladd
	ld	(ix - 15), hl
	ld	bc, 0
	ld	c, (iy - 2)
	ld	l, 16
	call	__lshl
	ld	hl, (ix - 15)
	call	__ladd
	ld	(ix - 15), hl
	ld	bc, 0
	ld	c, (iy - 3)
	ld	a, d
	ld	l, 24
	call	__lshl
	ld	hl, (ix - 15)
	call	__ladd
	ld	iy, (ix - 9)
	ld	(iy), hl
	ld	(iy + 3), e
	ld	iy, _W
	ld	bc, (ix - 6)
	add	iy, bc
	ld	(iy), hl
	ld	(iy + 3), e
	ld	iy, (ix - 3)
	ld	de, 4
	add	iy, de
	jp	BB15_20
BB15_22:
	or	a, a
	sbc	hl, hl
BB15_23:
	push	hl
	pop	bc
	ld	de, 192
	or	a, a
	sbc	hl, de
	jp	z, BB15_25
	push	bc
	pop	de
	ld	hl, _W
	add	hl, de
	ld	(ix - 3), hl
	ld	iy, (ix - 3)
	ld	de, (iy + 4)
	ld	(ix - 9), de
	ld	iy, (ix - 3)
	ld	a, (iy + 7)
	ld	(ix - 6), a
	ld	hl, 7
	push	hl
	ld	l, a
	push	hl
	push	de
	ld	(ix - 15), bc
	call	__Z3rormi
	ld	(ix - 18), hl
	ld	(ix - 19), e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 18
	push	hl
	ld	l, (ix - 6)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	__Z3rormi
	push	hl
	pop	iy
	ld	d, e
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 9)
	ld	a, (ix - 6)
	ld	l, 3
	call	__lshru
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 18)
	ld	a, (ix - 19)
	call	__lxor
	lea	bc, iy
	ld	a, d
	call	__lxor
	ld	(ix - 18), hl
	ld	(ix - 19), e
	ld	iy, (ix - 3)
	ld	de, (iy + 56)
	ld	(ix - 9), de
	ld	a, (iy + 59)
	ld	(ix - 6), a
	ld	hl, 17
	push	hl
	ld	l, a
	push	hl
	push	de
	call	__Z3rormi
	ld	(ix - 22), hl
	ld	(ix - 23), e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 19
	push	hl
	ld	l, (ix - 6)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	__Z3rormi
	push	hl
	pop	iy
	ld	d, e
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 9)
	ld	a, (ix - 6)
	ld	l, 10
	call	__lshru
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 22)
	ld	a, (ix - 23)
	call	__lxor
	lea	bc, iy
	ld	a, d
	call	__lxor
	ld	(ix - 6), hl
	ld	(ix - 9), e
	ld	iy, (ix - 3)
	ld	hl, (iy)
	ld	e, (iy + 3)
	ld	bc, (ix - 18)
	ld	a, (ix - 19)
	call	__ladd
	ld	bc, (iy + 36)
	ld	(ix - 18), bc
	ld	d, (iy + 39)
	ld	bc, (ix - 6)
	ld	a, (ix - 9)
	call	__ladd
	ld	bc, (ix - 18)
	ld	a, d
	call	__ladd
	ld	iy, (ix - 3)
	ld	(iy + 64), hl
	ld	iy, (ix - 3)
	ld	(iy + 67), e
	ld	de, 4
	ld	hl, (ix - 15)
	add	hl, de
	jp	BB15_23
BB15_25:
	ld	hl, _W
	push	hl
	call	__Z16sha224_calculatePm
	pop	hl
	ld	hl, (_lastBlock)
	jp	BB15_3
BB15_26:
	ld	hl, (_h)
	ld	a, (_h+3)
	ld	e, a
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcpy
	pop	hl
	pop	hl
	ld	hl, (_h+4)
	ld	a, (_h+7)
	ld	e, a
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	hl, (_h+8)
	ld	a, (_h+11)
	ld	e, a
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	hl, (_h+12)
	ld	a, (_h+15)
	ld	e, a
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	hl, (_h+16)
	ld	a, (_h+19)
	ld	e, a
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	hl, (_h+20)
	ld	a, (_h+23)
	ld	e, a
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	hl, (_h+24)
	ld	a, (_h+27)
	ld	e, a
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	ld	de, _finalHashArr
	ld	(ix + 6), de
	ld	(ix + 9), hl
	ld	sp, ix
	pop	ix
	jp	_strcat
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16sha224_calculatePm
__Z16sha224_calculatePm:
	ld	hl, -89
	call	__frameset
	or	a, a
	sbc	hl, hl
	ld	(ix - 26), hl
	ld	hl, (_h)
	ld	(ix - 61), hl
	ld	a, (_h+3)
	ld	(ix - 62), a
	ld	(_aa), hl
	ld	(_aa+3), a
	ld	hl, (_h+4)
	ld	(ix - 57), hl
	ld	a, (_h+7)
	ld	(ix - 58), a
	ld	(_bb), hl
	ld	(_bb+3), a
	ld	hl, (_h+8)
	ld	(ix - 53), hl
	ld	a, (_h+11)
	ld	(ix - 54), a
	ld	(_cc), hl
	ld	(_cc+3), a
	ld	hl, (_h+12)
	ld	(ix - 49), hl
	ld	a, (_h+15)
	ld	(ix - 50), a
	ld	(_dd), hl
	ld	(_dd+3), a
	ld	hl, (_h+16)
	ld	(ix - 45), hl
	ld	a, (_h+19)
	ld	(ix - 46), a
	ld	(_ee), hl
	ld	(_ee+3), a
	ld	hl, (_h+20)
	ld	(ix - 42), hl
	ld	a, (_h+23)
	ld	b, a
	ld	(_ff), hl
	ld	(_ff+3), a
	ld	iy, (_h+24)
	ld	a, (_h+27)
	ld	c, a
	ld	(_gg), iy
	ld	(_gg+3), a
	ld	hl, (_h+28)
	ld	a, (_h+31)
	ld	(_hh), hl
	ld	(_hh+3), a
	ld	de, 256
	ld	(ix - 65), hl
	ld	(ix - 38), hl
	ld	(ix - 66), a
	ld	(ix - 39), a
	ld	(ix - 69), iy
	ld	(ix - 18), iy
	ld	(ix - 70), c
	ld	(ix - 19), c
	ld	hl, (ix - 42)
	ld	(ix - 22), hl
	ld	(ix - 71), b
	ld	(ix - 23), b
	ld	bc, (ix - 45)
	ld	l, (ix - 46)
	ld	(ix - 3), hl
	ld	hl, (ix - 49)
	ld	(ix - 34), hl
	ld	a, (ix - 50)
	ld	(ix - 35), a
	ld	hl, (ix - 53)
	ld	(ix - 29), hl
	push	af
	ld	a, (ix - 54)
	ld	iyl, a
	pop	af
	ld	hl, (ix - 57)
	ld	(ix - 15), hl
	push	af
	ld	a, (ix - 58)
	ld	iyh, a
	pop	af
	ld	hl, (ix - 61)
	ld	(ix - 9), hl
	ld	l, (ix - 62)
	ld	(ix - 6), hl
BB16_1:
	ld	hl, (ix - 26)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), bc
	jp	z, BB16_3
	ld	hl, 6
	push	hl
	ld	hl, (ix - 3)
	push	hl
	push	bc
	push	af
	ld	a, iyl
	ld	(ix - 31), a
	pop	af
	push	af
	ld	a, iyh
	ld	(ix - 30), a
	pop	af
	call	__Z3rormi
	ld	(ix - 74), hl
	ld	(ix - 75), e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 11
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	call	__Z3rormi
	pop	bc
	pop	bc
	pop	bc
	ld	bc, (ix - 74)
	ld	a, (ix - 75)
	call	__lxor
	ld	(ix - 74), hl
	ld	(ix - 75), e
	ld	hl, 25
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	call	__Z3rormi
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 74)
	ld	e, (ix - 75)
	call	__lxor
	ld	(ix - 74), hl
	ld	(ix - 75), e
	ld	hl, (ix - 12)
	ld	de, (ix - 3)
	ld	bc, (ix - 22)
	ld	a, (ix - 23)
	call	__land
	ld	(ix - 85), hl
	ld	(ix - 86), e
	ld	hl, (ix - 12)
	ld	de, (ix - 3)
	call	__lnot
	push	hl
	pop	bc
	ld	a, e
	ld	hl, (ix - 18)
	ld	e, (ix - 19)
	call	__land
	ld	(ix - 89), hl
	ld	d, e
	ld	bc, (ix - 26)
	ld	iy, _k
	add	iy, bc
	ld	hl, (iy)
	ld	(ix - 81), hl
	ld	a, (iy + 3)
	ld	(ix - 82), a
	ld	iy, (ix + 6)
	add	iy, bc
	ld	hl, (iy)
	ld	(ix - 78), hl
	ld	a, (iy + 3)
	ld	iyl, a
	ld	hl, (ix - 85)
	ld	e, (ix - 86)
	ld	bc, (ix - 38)
	ld	a, (ix - 39)
	call	__ladd
	ld	bc, (ix - 89)
	ld	a, d
	call	__ladd
	ld	bc, (ix - 74)
	ld	a, (ix - 75)
	call	__ladd
	ld	bc, (ix - 81)
	ld	a, (ix - 82)
	call	__ladd
	ld	bc, (ix - 78)
	ld	a, iyl
	call	__ladd
	ld	(ix - 38), hl
	ld	(ix - 39), e
	ld	hl, 2
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	__Z3rormi
	ld	(ix - 74), hl
	ld	(ix - 75), e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 13
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	__Z3rormi
	pop	bc
	pop	bc
	pop	bc
	ld	bc, (ix - 74)
	ld	a, (ix - 75)
	call	__lxor
	ld	(ix - 74), hl
	ld	(ix - 75), e
	ld	hl, 22
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	__Z3rormi
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 74)
	ld	e, (ix - 75)
	call	__lxor
	ld	(ix - 74), hl
	ld	(ix - 75), e
	ld	hl, (ix - 15)
	ld	e, (ix - 30)
	ld	bc, (ix - 29)
	ld	a, (ix - 31)
	call	__lxor
	ld	bc, (ix - 9)
	ld	iy, (ix - 6)
	ld	a, iyl
	call	__land
	ld	(ix - 78), hl
	ld	d, e
	ld	hl, (ix - 15)
	ld	e, (ix - 30)
	ld	iy, (ix - 29)
	lea	bc, iy
	ld	a, (ix - 31)
	call	__land
	push	hl
	pop	bc
	ld	a, e
	ld	hl, (ix - 78)
	ld	e, d
	call	__lxor
	ld	(ix - 78), hl
	ld	(ix - 81), e
	ld	hl, (ix - 18)
	ld	(_hh), hl
	ld	a, (ix - 19)
	ld	(_hh+3), a
	ld	hl, (ix - 22)
	ld	(_gg), hl
	ld	a, (ix - 23)
	ld	(_gg+3), a
	ld	hl, (ix - 12)
	ld	(_ff), hl
	ld	hl, (ix - 3)
	ld	a, l
	ld	(_ff+3), a
	ld	hl, (ix - 38)
	ld	e, (ix - 39)
	ld	bc, (ix - 34)
	ld	a, (ix - 35)
	call	__ladd
	ld	(ix - 34), hl
	ld	d, e
	ld	(_ee), hl
	ld	a, d
	ld	(_ee+3), a
	ld	(_dd), iy
	ld	a, (ix - 31)
	ld	(_dd+3), a
	ld	hl, (ix - 15)
	ld	(_cc), hl
	ld	a, (ix - 30)
	ld	(_cc+3), a
	ld	hl, (ix - 9)
	ld	(_bb), hl
	ld	hl, (ix - 6)
	ld	a, l
	ld	(_bb+3), a
	ld	hl, (ix - 38)
	ld	e, (ix - 39)
	ld	bc, (ix - 78)
	ld	a, (ix - 81)
	call	__ladd
	ld	bc, (ix - 74)
	ld	a, (ix - 75)
	call	__ladd
	ld	a, e
	ld	(_aa), hl
	ld	(_aa+3), a
	ld	bc, 4
	ld	iy, (ix - 26)
	add	iy, bc
	ld	(ix - 26), iy
	ld	bc, (ix - 18)
	ld	(ix - 38), bc
	ld	e, (ix - 19)
	ld	(ix - 39), e
	ld	bc, (ix - 22)
	ld	(ix - 18), bc
	ld	e, (ix - 23)
	ld	(ix - 19), e
	ld	bc, (ix - 12)
	ld	(ix - 22), bc
	ld	bc, (ix - 3)
	ld	(ix - 23), c
	ld	bc, (ix - 34)
	ld	e, d
	ld	(ix - 3), de
	ld	de, (ix - 29)
	ld	(ix - 34), de
	ld	e, (ix - 31)
	ld	(ix - 35), e
	ld	de, (ix - 15)
	ld	(ix - 29), de
	push	af
	ld	a, (ix - 30)
	ld	iyl, a
	pop	af
	ld	de, (ix - 9)
	ld	(ix - 15), de
	ld	de, (ix - 6)
	ld	iyh, e
	ld	(ix - 9), hl
	ld	l, a
	ld	(ix - 6), hl
	ld	de, 256
	jp	BB16_1
BB16_3:
	ld	hl, (ix - 9)
	ld	de, (ix - 6)
	ld	bc, (ix - 61)
	ld	a, (ix - 62)
	call	__ladd
	ld	a, e
	ld	(_h), hl
	ld	(_h+3), a
	ld	hl, (ix - 15)
	ld	e, iyh
	ld	bc, (ix - 57)
	ld	a, (ix - 58)
	call	__ladd
	ld	a, e
	ld	(_h+4), hl
	ld	(_h+7), a
	ld	hl, (ix - 29)
	ld	e, iyl
	ld	bc, (ix - 53)
	ld	a, (ix - 54)
	call	__ladd
	ld	a, e
	ld	(_h+8), hl
	ld	(_h+11), a
	ld	hl, (ix - 34)
	ld	e, (ix - 35)
	ld	bc, (ix - 49)
	ld	a, (ix - 50)
	call	__ladd
	ld	a, e
	ld	(_h+12), hl
	ld	(_h+15), a
	ld	hl, (ix - 12)
	ld	de, (ix - 3)
	ld	bc, (ix - 45)
	ld	a, (ix - 46)
	call	__ladd
	ld	a, e
	ld	(_h+16), hl
	ld	(_h+19), a
	ld	hl, (ix - 22)
	ld	e, (ix - 23)
	ld	bc, (ix - 42)
	ld	a, (ix - 71)
	call	__ladd
	ld	a, e
	ld	(_h+20), hl
	ld	(_h+23), a
	ld	hl, (ix - 18)
	ld	e, (ix - 19)
	ld	bc, (ix - 69)
	ld	a, (ix - 70)
	call	__ladd
	ld	a, e
	ld	(_h+24), hl
	ld	(_h+27), a
	ld	hl, (ix - 38)
	ld	e, (ix - 39)
	ld	bc, (ix - 65)
	ld	a, (ix - 66)
	call	__ladd
	ld	a, e
	ld	(_h+28), hl
	ld	(_h+31), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3rormi
__Z3rormi:
	ld	hl, -6
	call	__frameset
	ld	de, (ix + 12)
	ld	iy, 0
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	call	pe, __setflag
	jp	p, BB17_2
	lea	bc, iy
BB17_2:
	ld	iy, (ix + 6)
	ld	e, (ix + 9)
	ld	d, 31
BB17_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB17_5
	ld	(ix - 3), bc
	lea	bc, iy
	ld	a, e
	ld	l, d
	call	__lshl
	ld	(ix - 6), bc
	ld	d, a
	lea	bc, iy
	ld	a, e
	ld	l, 1
	call	__lshru
	ld	hl, (ix - 6)
	ld	e, d
	ld	d, 31
	call	__lor
	ld	bc, (ix - 3)
	push	hl
	pop	iy
	dec	bc
	jr	BB17_3
BB17_5:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3rolmi
__Z3rolmi:
	ld	hl, -6
	call	__frameset
	ld	de, (ix + 12)
	ld	iy, 0
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	call	pe, __setflag
	jp	p, BB18_2
	lea	bc, iy
BB18_2:
	ld	iy, (ix + 6)
	ld	e, (ix + 9)
	ld	d, 1
BB18_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB18_5
	ld	(ix - 3), bc
	lea	bc, iy
	ld	a, e
	ld	l, d
	call	__lshl
	ld	(ix - 6), bc
	ld	d, a
	lea	bc, iy
	ld	a, e
	ld	l, 31
	call	__lshru
	ld	hl, (ix - 6)
	ld	e, d
	ld	d, 1
	call	__lor
	ld	bc, (ix - 3)
	push	hl
	pop	iy
	dec	bc
	jr	BB18_3
BB18_5:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_msg
_msg:
	rb	1100

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"log1.txt", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"wt", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	" Agon Light 2 (Zilog eZ80F92 Acclaim! CPU)", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"[2024/09/12 23:13 NZT]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"[  SHA-224 hashing test calculation over different strings  ]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"[   -- measure of time used for calculation of SHA-224 --   ]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"[            -- over different string lengths  --           ]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"=============================================================", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"Test 1", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"======", 10, 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s0
__ZL2s0:
	db	"The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.", 0, 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"%d |%6.6lx|%6.6lx|%lu [us]||%s|%s|(%d)", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.12
_.str.12:
	db	"Test 2", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s1
__ZL2s1:
	db	"abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvw", 0, 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"Test 3", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s2
__ZL2s2:
	db	"0123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedc", 0, 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"Test 4", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s3
__ZL2s3:
	db	

	section	.rodata,"a",@progbits
	private	_.str.15
_.str.15:
	db	"Test 5", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s4
__ZL2s4:
	db	

	section	.rodata,"a",@progbits
	private	_.str.16
_.str.16:
	db	"[END]", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_str
_str:
	db	" Agon Light 2 (Zilog eZ80F92 Acclaim! CPU)", 0

	section	.rodata,"a",@progbits
	private	_str.17
_str.17:
	db	"[2024/09/12 23:13 NZT]", 0

	section	.rodata,"a",@progbits
	private	_str.18
_str.18:
	db	"[  SHA-224 hashing test calculation over different strings  ]", 0

	section	.rodata,"a",@progbits
	private	_str.19
_str.19:
	db	"[   -- measure of time used for calculation of SHA-224 --   ]", 0

	section	.rodata,"a",@progbits
	private	_str.20
_str.20:
	db	"[            -- over different string lengths  --           ]", 0

	section	.rodata,"a",@progbits
	private	_str.21
_str.21:
	db	"=============================================================", 10, 0

	section	.rodata,"a",@progbits
	private	_str.22
_str.22:
	db	"Test 1", 0

	section	.rodata,"a",@progbits
	private	_str.25
_str.25:
	db	"Test 2", 0

	section	.rodata,"a",@progbits
	private	_str.28
_str.28:
	db	"Test 3", 0

	section	.rodata,"a",@progbits
	private	_str.31
_str.31:
	db	"Test 4", 0

	section	.rodata,"a",@progbits
	private	_str.34
_str.34:
	db	"Test 5", 0

	section	.rodata,"a",@progbits
	private	_str.35
_str.35:
	db	"======", 10, 0

	section	.rodata,"a",@progbits
	private	_str.37
_str.37:
	db	"[END]", 10, 0

	section	.bss,"aw",@nobits
	public	_nmtmp0
_nmtmp0:
	rb	64

	section	.bss,"aw",@nobits
	public	_nmtmp1
_nmtmp1:
	rb	128

	section	.bss,"aw",@nobits
	public	_nmtmp2
_nmtmp2:
	rb	256

	section	.bss,"aw",@nobits
	public	_TMR5_COUNTER_UPPER
_TMR5_COUNTER_UPPER:
	rb	1

	section	.rodata,"a",@progbits
	private	_.str.1.7
_.str.1.7:
	db	"===============================", 0

	section	.rodata,"a",@progbits
	private	_.str.2.8
_.str.2.8:
	db	"%s", 0

	section	.rodata,"a",@progbits
	private	_.str.3.12
_.str.3.12:
	db	"%d ", 0

	section	.rodata,"a",@progbits
	private	_.str.4.11
_.str.4.11:
	db	10, 0

	section	.rodata,"a",@progbits
	private	_.str.5.9
_.str.5.9:
	db	" ", 0

	section	.rodata,"a",@progbits
	private	_.str.6.10
_.str.6.10:
	db	"%lu ", 0

	section	.bss,"aw",@nobits
	public	_h
_h:
	rb	32

	section	.bss,"aw",@nobits
	public	_aa
_aa:
	rb	4

	section	.bss,"aw",@nobits
	public	_bb
_bb:
	rb	4

	section	.bss,"aw",@nobits
	public	_cc
_cc:
	rb	4

	section	.bss,"aw",@nobits
	public	_dd
_dd:
	rb	4

	section	.bss,"aw",@nobits
	public	_ee
_ee:
	rb	4

	section	.bss,"aw",@nobits
	public	_ff
_ff:
	rb	4

	section	.bss,"aw",@nobits
	public	_gg
_gg:
	rb	4

	section	.bss,"aw",@nobits
	public	_hh
_hh:
	rb	4

	section	.bss,"aw",@nobits
	public	_M
_M:
	rb	64

	section	.bss,"aw",@nobits
	public	_W
_W:
	rb	256

	section	.bss,"aw",@nobits
	public	_block64
_block64:
	rb	64

	section	.bss,"aw",@nobits
	public	_paddingRemainingBytes
_paddingRemainingBytes:
	rb	4

	section	.bss,"aw",@nobits
	public	_usePadding
_usePadding:
	rb	3

	section	.bss,"aw",@nobits
	public	_paddingFirstByte
_paddingFirstByte:
	rb	3

	section	.bss,"aw",@nobits
	public	_lastBlock
_lastBlock:
	rb	3

	section	.bss,"aw",@nobits
	public	_finalHashArr
_finalHashArr:
	rb	64

	section	.data,"aw",@progbits
	public	_k
_k:
	dd	1116352408
	dd	1899447441
	dd	3049323471
	dd	3921009573
	dd	961987163
	dd	1508970993
	dd	2453635748
	dd	2870763221
	dd	3624381080
	dd	310598401
	dd	607225278
	dd	1426881987
	dd	1925078388
	dd	2162078206
	dd	2614888103
	dd	3248222580
	dd	3835390401
	dd	4022224774
	dd	264347078
	dd	604807628
	dd	770255983
	dd	1249150122
	dd	1555081692
	dd	1996064986
	dd	2554220882
	dd	2821834349
	dd	2952996808
	dd	3210313671
	dd	3336571891
	dd	3584528711
	dd	113926993
	dd	338241895
	dd	666307205
	dd	773529912
	dd	1294757372
	dd	1396182291
	dd	1695183700
	dd	1986661051
	dd	2177026350
	dd	2456956037
	dd	2730485921
	dd	2820302411
	dd	3259730800
	dd	3345764771
	dd	3516065817
	dd	3600352804
	dd	4094571909
	dd	275423344
	dd	430227734
	dd	506948616
	dd	659060556
	dd	883997877
	dd	958139571
	dd	1322822218
	dd	1537002063
	dd	1747873779
	dd	1955562222
	dd	2024104815
	dd	2227730452
	dd	2361852424
	dd	2428436474
	dd	2756734187
	dd	3204031479
	dd	3329325298

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	__Unwind_SjLj_Register
	extern	__lor
	extern	__lcmpzero
	extern	__ishl
	extern	__ladd
	extern	_strlen
	extern	__setflag
	extern	_printf
	extern	_putchar
	extern	__lshrs
	extern	__lshru
	extern	_fwrite
	extern	__frameset
	extern	_fopen
	extern	__lmulu
	extern	__lsub
	extern	_mos_port_write
	extern	_fprintf
	extern	__lnot
	extern	_puts
	extern	__lshl
	extern	__Unwind_SjLj_Unregister
	extern	_strcpy
	extern	_mos_port_read
	extern	_strcat
	extern	__land
	extern	__lxor
	extern	__bshl
	extern	__lcmps
	extern	__lcmpu
	extern	__frameset0
	extern	_fclose

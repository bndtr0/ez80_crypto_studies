	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -29
	call	__frameset
	lea	hl, ix - 2
	ld	(ix - 23), hl
	lea	hl, ix - 5
	ld	(ix - 14), hl
	lea	hl, ix - 8
	ld	(ix - 17), hl
	call	_printHelp
BB0_1:
	ld	hl, 62
	push	hl
	call	_putchar
	pop	hl
	pea	ix - 1
	ld	hl, _.str.1
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	a, (ix - 1)
	cp	a, 72
	jr	nz, BB0_10
BB0_2:
	call	_printHelp
	ld	a, (ix - 1)
BB0_3:
	cp	a, 86
	jr	z, BB0_5
	cp	a, 118
	jr	nz, BB0_6
BB0_5:
	call	_printVersion
	ld	a, (ix - 1)
BB0_6:
	cp	a, 100
	jr	nz, BB0_14
	ld	de, 19
BB0_8:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_13
	ld	hl, _.str.2
	push	hl
	ld	(ix - 20), de
	call	_printf
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 500
	push	hl
	call	_msdelay
	pop	hl
	pop	hl
	ld	hl, _.str
	push	hl
	call	_printf
	ld	de, (ix - 20)
	pop	hl
	dec	de
	jr	BB0_8
BB0_10:
	cp	a, 81
	jp	z, BB0_61
	cp	a, 104
	jr	z, BB0_2
	cp	a, 113
	jp	z, BB0_61
	jr	BB0_3
BB0_13:
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	a, (ix - 1)
BB0_14:
	cp	a, 80
	jr	z, BB0_16
	cp	a, 112
	jp	nz, BB0_39
BB0_16:
	ld	hl, (ix - 23)
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	a, (ix - 2)
	cp	a, 82
	jr	z, BB0_18
	cp	a, 114
	jr	nz, BB0_19
BB0_18:
	ld	hl, (ix - 14)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 5)
	ld	(ix - 20), hl
	push	hl
	call	_mos_port_read
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	hl
	ld	hl, (ix - 20)
	push	hl
	ld	hl, _.str.5
	push	hl
	call	_printf
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 2)
BB0_19:
	cp	a, 66
	jr	z, BB0_21
	cp	a, 98
	jp	nz, BB0_28
BB0_21:
	ld	hl, (ix - 14)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 17)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	bc, (ix - 5)
	ld	de, (ix - 8)
	push	bc
	pop	hl
	dec	hl
	add	hl, de
	push	hl
	push	bc
	ld	hl, _.str.6
	push	hl
	call	_printf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _str.39
	push	hl
	call	_puts
	pop	hl
	ld	bc, (ix - 5)
	push	bc
	pop	de
	ld	iy, 0
	ld	(ix - 20), bc
BB0_22:
	ld	hl, (ix - 8)
	add	hl, de
	ex	de, hl
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nc, BB0_27
	ld	(ix - 29), iy
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 26), bc
	push	bc
	ld	hl, _.str.8
	push	hl
	call	z, _printf
	pop	hl
	pop	hl
	ld	hl, (ix - 20)
	push	hl
	call	_mos_port_read
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	iy, (ix - 29)
	lea	hl, iy
	ld	de, 7
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_25
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	iy, 0
	jr	BB0_26
BB0_25:
	inc	iy
BB0_26:
	ld	bc, (ix - 26)
	inc	bc
	ld	de, (ix - 5)
	ld	hl, (ix - 20)
	inc	l
	ld	(ix - 20), hl
	jr	BB0_22
BB0_27:
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	a, (ix - 2)
BB0_28:
	cp	a, 87
	jr	z, BB0_30
	cp	a, 119
	jp	nz, BB0_31
BB0_30:
	ld	hl, (ix - 14)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 17)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 5)
	ld	de, (ix - 8)
	push	de
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 5)
	ld	l, (ix - 8)
	push	hl
	ld	l, a
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	a, (ix - 2)
BB0_31:
	cp	a, 84
	jr	z, BB0_33
	cp	a, 116
	jp	nz, BB0_39
BB0_33:
	ld	hl, (ix - 14)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 17)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	pea	ix - 11
	ld	hl, _.str.11
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 11)
	push	hl
	ld	hl, _.str.12
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	hl, 1
	ex	de, hl
BB0_34:
	ld	hl, (ix - 11)
	or	a, a
	sbc	hl, de
	jr	c, BB0_39
	ld	hl, (ix - 5)
	push	hl
	ld	(ix - 20), de
	push	de
	ld	hl, _.str.13
	push	hl
	call	_printf
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 5)
	push	bc
	pop	de
	push	bc
	pop	iy
BB0_36:
	ld	hl, (ix - 8)
	add	hl, de
	ex	de, hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	nc, BB0_38
	push	bc
	ld	(ix - 26), bc
	ld	(ix - 29), iy
	call	_mos_port_read
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_printf
	ld	iy, (ix - 29)
	ld	bc, (ix - 26)
	pop	hl
	pop	hl
	inc	iy
	ld	de, (ix - 5)
	inc	c
	jr	BB0_36
BB0_38:
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	de, (ix - 20)
	inc	de
	jr	BB0_34
BB0_39:
	ld	a, (ix - 1)
	cp	a, 77
	jr	z, BB0_41
	cp	a, 109
	jp	nz, BB0_1
BB0_41:
	ld	hl, (ix - 23)
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	a, (ix - 2)
	cp	a, 82
	jr	z, BB0_43
	cp	a, 114
	jr	nz, BB0_44
BB0_43:
	ld	hl, (ix - 14)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 5)
	ld	de, 0
	ld	e, (hl)
	push	de
	push	hl
	ld	hl, _.str.14
	push	hl
	call	_printf
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 2)
BB0_44:
	cp	a, 87
	jr	z, BB0_46
	cp	a, 119
	jr	nz, BB0_47
BB0_46:
	ld	hl, (ix - 14)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 17)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 5)
	ld	de, (ix - 8)
	push	de
	push	hl
	ld	hl, _.str.15
	push	hl
	call	_printf
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 8)
	ld	hl, (ix - 5)
	ld	(hl), a
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	a, (ix - 2)
BB0_47:
	cp	a, 66
	jr	z, BB0_49
	cp	a, 98
	jp	nz, BB0_1
BB0_49:
	ld	hl, (ix - 14)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	hl, (ix - 17)
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_scanf
	pop	hl
	pop	hl
	ld	bc, (ix - 5)
	ld	de, (ix - 8)
	push	bc
	pop	hl
	dec	hl
	add	hl, de
	push	hl
	push	bc
	ld	hl, _.str.16
	push	hl
	call	_printf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _str
	push	hl
	call	_puts
	pop	hl
	ld	de, (ix - 5)
	ld	iy, 0
	push	de
	pop	bc
BB0_50:
	ld	hl, (ix - 8)
	add	hl, de
	ex	de, hl
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	nc, BB0_60
	ld	(ix - 26), iy
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	bc
	ld	hl, _.str.18
	push	hl
	ld	(ix - 20), bc
	call	z, _printf
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	hl, (ix - 20)
	ld	e, (hl)
	push	de
	ld	hl, _.str.9
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	iy, (ix - 26)
	lea	hl, iy
	ld	de, 7
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_57
	ld	hl, _.str.19
	push	hl
	call	_printf
	pop	hl
	ld	bc, (ix - 20)
	push	bc
	pop	hl
	ld	de, -7
	add	hl, de
	ex	de, hl
	push	bc
	pop	hl
BB0_53:
	or	a, a
	sbc	hl, de
	jr	c, BB0_58
	ld	(ix - 26), de
	ex	de, hl
	ld	a, (hl)
	cp	a, 32
	jr	nc, BB0_56
	ld	a, 46
BB0_56:
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	hl
	ld	hl, _.str.20
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	de, (ix - 26)
	inc	de
	ld	hl, (ix - 20)
	jr	BB0_53
BB0_57:
	inc	iy
	jr	BB0_59
BB0_58:
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	iy, 0
BB0_59:
	ld	bc, (ix - 20)
	inc	bc
	ld	de, (ix - 5)
	jp	BB0_50
BB0_60:
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	jp	BB0_1
BB0_61:
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_printHelp
_printHelp:
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	hl, _str.50
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.48
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.49
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.50
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.51
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.52
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.53
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.60
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.55
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.56
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.57
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.60
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.59
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.60
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.61
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.62
	push	hl
	call	_puts
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_printVersion
_printVersion:
	ld	hl, _.str.3
	push	hl
	call	_printf
	pop	hl
	ld	hl, _str.50
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.48
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.49
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.50
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.44
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.45
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.46
	push	hl
	call	_puts
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_msdelay
_msdelay:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, -1
	ld	a, b
	;APP
	push bc
	assume	adl = 1
	;NO_APP
BB3_1:
	lea	hl, iy
	call	__lcmpzero
	jr	z, BB3_6
	ld	hl, 1000
BB3_3:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_5
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	dec	hl
	jr	BB3_3
BB3_5:
	lea	hl, iy
	call	__ladd
	push	hl
	pop	iy
	jr	BB3_1
BB3_6:
	;APP
	pop bc
	assume	adl = 1
	;NO_APP
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_printBin8
_printBin8:
	ld	hl, -2
	call	__frameset
	ld	a, (ix + 6)
	ld	(ix - 1), a
	ld	hl, _.str.37
	push	hl
	call	_printf
	pop	hl
	ld	l, 8
BB4_1:
	ld	a, l
	or	a, a
	jr	z, BB4_3
	ld	(ix - 2), l
	ld	a, (ix - 1)
	ld	b, 7
	call	__bshru
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	hl
	ld	hl, _.str.11
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	a, (ix - 1)
	add	a, a
	ld	(ix - 1), a
	ld	a, (ix + 9)
	or	a, a
	ld	hl, _.str.38
	push	hl
	call	nz, _printf
	pop	hl
	ld	l, (ix - 2)
	dec	l
	jr	BB4_1
BB4_3:
	ld	a, (ix + 12)
	or	a, a
	ld	hl, _.str.3
	push	hl
	call	nz, _printf
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_usdelay
_usdelay:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, -1
	ld	a, b
	;APP
	push bc
	assume	adl = 1
	;NO_APP
BB5_1:
	call	__lcmpzero
	jr	z, BB5_3
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	;APP
	ld bc, 101010h
	assume	adl = 1
	;NO_APP
	call	__ladd
	jr	BB5_1
BB5_3:
	;APP
	pop bc
	assume	adl = 1
	;NO_APP
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	">", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"%c", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"<", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	10, 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"%x", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"port(%2.2x) -> %2.2x", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"ports(%2.2x:%2.2x)", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"0x%4.4x: ", 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"%2.2x ", 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"port(%2.2x) <- %2.2x", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.11
_.str.11:
	db	"%d", 0

	section	.rodata,"a",@progbits
	private	_.str.12
_.str.12:
	db	"Read IN ports %d times:", 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"(%5.5d) port(0x%2.2x): ", 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"mem(%6.6x) -> %2.2x", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.15
_.str.15:
	db	"mem(%6.6x) <- %2.2x", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.16
_.str.16:
	db	"memb(%6.6x:%6.6x):", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.18
_.str.18:
	db	"0x%6.6x: ", 0

	section	.rodata,"a",@progbits
	private	_.str.19
_.str.19:
	db	"     ", 0

	section	.rodata,"a",@progbits
	private	_.str.20
_.str.20:
	db	"%c ", 0

	section	.rodata,"a",@progbits
	private	_.str.37
_.str.37:
	db	"%%", 0

	section	.rodata,"a",@progbits
	private	_.str.38
_.str.38:
	db	" ", 0

	section	.rodata,"a",@progbits
	private	_str
_str:
	db	"--------------------", 0

	section	.rodata,"a",@progbits
	private	_str.39
_str.39:
	db	"----------------", 0

	section	.rodata,"a",@progbits
	private	_str.44
_str.44:
	db	"2024-08-23 19:10", 0

	section	.rodata,"a",@progbits
	private	_str.45
_str.45:
	db	"Version 0.1", 0

	section	.rodata,"a",@progbits
	private	_str.46
_str.46:
	db	"Tool for analysis of SRAM and HW ports in Zilog eZ80F92 CPU.", 10, 0

	section	.rodata,"a",@progbits
	private	_str.48
_str.48:
	db	"| ZiLog eZ80F92 CPU      |", 0

	section	.rodata,"a",@progbits
	private	_str.49
_str.49:
	db	"| port-mem-reader-writer |", 0

	section	.rodata,"a",@progbits
	private	_str.50
_str.50:
	db	"+------------------------+", 0

	section	.rodata,"a",@progbits
	private	_str.51
_str.51:
	db	"pr <paddr>            : read IN port", 0

	section	.rodata,"a",@progbits
	private	_str.52
_str.52:
	db	"pb <paddr> <count>    : read a block of IN ports ('count' addresses)", 0

	section	.rodata,"a",@progbits
	private	_str.53
_str.53:
	db	"pw <paddr> <value>    : write value in OUT port", 0

	section	.rodata,"a",@progbits
	private	_str.55
_str.55:
	db	"mr <maddr>            : read SRAM value from a SRAM address", 0

	section	.rodata,"a",@progbits
	private	_str.56
_str.56:
	db	"mw <maddr> <value>    : write SRAM value into a SRAM address", 0

	section	.rodata,"a",@progbits
	private	_str.57
_str.57:
	db	"mb <maddr> <count>    : see SRAM values inside a block", 0

	section	.rodata,"a",@progbits
	private	_str.59
_str.59:
	db	"pt <paddr> <count> <n>: read a block of <count> IN ports <n> times", 0

	section	.rodata,"a",@progbits
	private	_str.60
_str.60:
	db	"--------------------------", 0

	section	.rodata,"a",@progbits
	private	_str.61
_str.61:
	db	"h                     : shows this help text", 0

	section	.rodata,"a",@progbits
	private	_str.62
_str.62:
	db	"q                     : quit program", 10, 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__lcmpzero
	extern	_mos_port_write
	extern	_scanf
	extern	_puts
	extern	__ladd
	extern	__setflag
	extern	_printf
	extern	__Unwind_SjLj_Unregister
	extern	_mos_port_read
	extern	_putchar
	extern	__bshru
	extern	__frameset0

	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -18
	call	__frameset
	ld	hl, _.str
	ld	de, _.str.1
	push	de
	push	hl
	call	_fopen
	ld	(ix - 3), hl
	pop	hl
	pop	hl
	ld	hl, _str
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.17
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.18
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.19
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.20
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.21
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 43
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 23
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 62
	push	hl
	ld	hl, _.str.4
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 62
	push	hl
	ld	hl, _.str.5
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 62
	push	hl
	ld	hl, _.str.6
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 63
	push	hl
	ld	hl, _.str.7
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _str.22
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.34
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.8
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, 1011
	ld	bc, 1
BB0_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	z, BB0_3
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s0
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha512_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	ld	de, 1011
	jp	BB0_1
BB0_3:
	ld	hl, _str.24
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.34
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.11
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_4:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_6
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s1
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha512_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_4
BB0_6:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.27
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.34
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.13
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_7:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_9
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s2
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha512_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_7
BB0_9:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.30
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.34
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.14
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_10:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_12
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s3
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha512_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_10
BB0_12:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.33
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.34
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.15
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 1
BB0_13:
	push	bc
	pop	hl
	ld	de, 1011
	or	a, a
	sbc	hl, de
	jp	z, BB0_15
	ld	iy, _msg
	lea	de, iy
	ld	hl, __ZL2s4
	ld	(ix - 6), bc
	ld	bc, 1013
	ldir
	ld	de, (ix - 6)
	add	iy, de
	ld	(iy), 0
	call	__Z12micros_setupv
	call	__Z6microsv
	call	__Z6microsv
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _msg
	push	hl
	call	__Z11sha512_hashPhl
	pop	hl
	pop	hl
	pop	hl
	call	__Z6microsv
	ld	(ix - 12), hl
	call	__Z11micros_stopv
	ld	hl, (ix - 9)
	xor	a, a
	ld	e, a
	ld	bc, (ix - 12)
	call	__lsub
	ld	bc, 14
	call	__lmulu
	ld	(ix - 15), hl
	ld	(ix - 18), de
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, 0
	push	hl
	ld	de, (ix - 12)
	push	de
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_printf
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, _msg
	push	hl
	call	_strlen
	pop	de
	push	hl
	ld	hl, _msg
	push	hl
	ld	hl, _finalHashArr
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	de, 0
	push	de
	ld	hl, (ix - 12)
	push	hl
	push	de
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fprintf
	ld	bc, (ix - 6)
	ld	hl, 36
	add	hl, sp
	ld	sp, hl
	inc	bc
	jp	BB0_13
BB0_15:
	ld	hl, _.str.4.11
	push	hl
	call	_puts
	pop	hl
	ld	hl, _str.36
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 7
	push	hl
	ld	hl, _.str.16
	push	hl
	call	_fwrite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_fclose
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12micros_setupv
__Z12micros_setupv:
	ld	hl, 12
	push	hl
	ld	hl, -113
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, -112
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, -111
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	ld	a, -1
	ld	(_TMR5_COUNTER_UPPER), a
	ld	hl, 31
	push	hl
	ld	hl, -113
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11micros_stopv
__Z11micros_stopv:
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, -113
	push	hl
	call	_mos_port_write
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z6microsv
__Z6microsv:
	ld	hl, -2
	call	__frameset
	ld	hl, -112
	push	hl
	call	_mos_port_read
	ld	(ix - 1), a
	pop	hl
	ld	hl, -111
	push	hl
	call	_mos_port_read
	ld	(ix - 2), a
	pop	hl
	call	__Z12updateMicrosv
	ld	a, (_TMR5_COUNTER_UPPER)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	c, 16
	call	__ishl
	push	hl
	pop	iy
	ld	de, 0
	ld	e, (ix - 2)
	ld	c, 8
	push	de
	pop	hl
	call	__ishl
	push	hl
	pop	bc
	add	iy, bc
	ld	e, (ix - 1)
	add	iy, de
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z12updateMicrosv
__Z12updateMicrosv:
	ld	hl, -113
	push	hl
	call	_mos_port_read
	pop	hl
	cp	a, 0
	call	pe, __setflag
	jp	p, BB4_2
	ld	hl, _TMR5_COUNTER_UPPER
	dec	(hl)
BB4_2:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z19NumTools_toHexDigith
__Z19NumTools_toHexDigith:
	call	__frameset0
	ld	a, (ix + 6)
	and	a, 15
	ld	c, a
	add	a, 48
	ld	l, a
	ld	a, c
	add	a, 87
	ld	e, a
	ld	a, c
	cp	a, 10
	jr	c, BB5_2
	ld	l, e
BB5_2:
	ld	a, l
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z14NumTools_toHexmh
__Z14NumTools_toHexmh:
	ld	hl, -2
	call	__frameset
	ld	l, (ix + 12)
	ld	e, 0
	ld	a, l
	cp	a, 8
	ld	h, l
	jr	c, BB6_2
	ld	h, 8
BB6_2:
	ld	a, e
	ld	(_nmtmp0+8), a
	inc	h
	ld	a, l
	or	a, a
	jr	nz, BB6_4
	ld	h, 2
BB6_4:
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	iy, _nmtmp0+8
	ld	de, 0
	ld	e, h
BB6_5:
	dec	de
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB6_9
	ld	(ix - 1), a
	ld	a, c
	and	a, 15
	ld	h, a
	add	a, 48
	ld	l, a
	ld	a, h
	add	a, 87
	ld	(ix - 2), a
	ld	a, h
	cp	a, 10
	jr	c, BB6_8
	ld	l, (ix - 2)
BB6_8:
	ld	(iy - 1), l
	dec	iy
	ld	a, (ix - 1)
	ld	l, 4
	call	__lshru
	jr	BB6_5
BB6_9:
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16NumTools_toHex64yh
__Z16NumTools_toHex64yh:
	ld	hl, -12
	call	__frameset
	ld	l, (ix + 15)
	ld	h, 0
	ld	a, l
	cp	a, 16
	ld	c, l
	jr	c, BB7_2
	ld	c, 16
BB7_2:
	ld	de, (ix + 12)
	ld	(ix - 6), de
	ld	a, h
	ld	(_nmtmp0+16), a
	inc	c
	ld	a, l
	or	a, a
	jr	nz, BB7_4
	ld	c, 2
BB7_4:
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, _nmtmp0+16
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, hl
	ld	l, c
BB7_5:
	dec	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB7_9
	ld	(ix - 9), hl
	ld	(ix - 12), iy
	ld	a, iyl
	and	a, 15
	ld	h, a
	add	a, 48
	ld	l, a
	ld	a, h
	add	a, 87
	ld	c, a
	ld	a, h
	cp	a, 10
	jr	c, BB7_8
	ld	l, c
BB7_8:
	ld	iy, (ix - 3)
	ld	(iy - 1), l
	dec	iy
	ld	(ix - 3), iy
	ld	hl, 4
	push	hl
	ld	hl, (ix - 12)
	ld	bc, (ix - 6)
	call	__llshru
	push	hl
	pop	iy
	ld	(ix - 6), bc
	pop	hl
	ld	hl, (ix - 9)
	jp	BB7_5
BB7_9:
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15NumTools_toHex2h
__Z15NumTools_toHex2h:
	call	__frameset0
	ld	a, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	de, 2
	push	de
	push	hl
	ld	l, a
	push	hl
	call	__Z14NumTools_toHexmh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15NumTools_toHex4j
__Z15NumTools_toHex4j:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, 4
	push	de
	ld	de, 0
	push	de
	push	hl
	call	__Z14NumTools_toHexmh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z15NumTools_toHex8m
__Z15NumTools_toHex8m:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	ld	de, 8
	push	de
	ld	e, a
	push	de
	push	hl
	call	__Z14NumTools_toHexmh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16NumTools_toHex16y
__Z16NumTools_toHex16y:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	hl, 16
	push	hl
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex64yh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z22NumTools_toHex8Reversem
__Z22NumTools_toHex8Reversem:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
	pop	de
	ld	(ix - 3), hl
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	dec	de
	ld	bc, 0
	ld	iy, _nmtmp1
BB12_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB12_3
	ld	hl, (ix - 3)
	add	hl, de
	ld	a, (hl)
	ld	(iy), a
	inc	iy
	dec	de
	jr	BB12_1
BB12_3:
	ld	(iy), 0
	ld	hl, _nmtmp1
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z25NumTools_toHex8Reverse_2bm
__Z25NumTools_toHex8Reverse_2bm:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	push	hl
	pop	iy
	pop	hl
	pop	hl
	ld	a, (iy + 6)
	ld	(_nmtmp1), a
	ld	a, (iy + 7)
	ld	(_nmtmp1+1), a
	ld	a, (iy + 4)
	ld	(_nmtmp1+2), a
	ld	a, (iy + 5)
	ld	(_nmtmp1+3), a
	ld	a, (iy + 2)
	ld	(_nmtmp1+4), a
	ld	a, (iy + 3)
	ld	(_nmtmp1+5), a
	ld	a, (iy)
	ld	(_nmtmp1+6), a
	ld	a, (iy + 1)
	ld	(_nmtmp1+7), a
	xor	a, a
	ld	(_nmtmp1+8), a
	ld	hl, _nmtmp1
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z23NumTools_printArray_tuiPcPmjhih
__Z23NumTools_printArray_tuiPcPmjhih:
	ld	hl, -11
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	(ix - 3), de
	ld	de, (ix + 12)
	ld	(ix - 6), de
	ld	a, (ix + 15)
	ld	(ix - 7), a
	ld	de, (ix + 18)
	ld	(ix - 10), de
	ld	a, (ix + 21)
	ld	(ix - 11), a
	push	hl
	call	_puts
	pop	hl
	ld	hl, _.str.1.7
	push	hl
	call	_printf
	pop	hl
	ld	hl, (ix - 3)
	ld	(ix + 6), hl
	ld	hl, (ix - 6)
	ld	(ix + 9), hl
	ld	a, (ix - 7)
	ld	(ix + 12), a
	ld	hl, (ix - 10)
	ld	(ix + 15), hl
	ld	a, (ix - 11)
	ld	(ix + 18), a
	ld	sp, ix
	pop	ix
	jp	__Z22NumTools_printArray_uiPmihih
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z22NumTools_printArray_uiPmihih
__Z22NumTools_printArray_uiPmihih:
	ld	hl, -16
	call	__frameset
	ld	iy, (ix + 6)
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	hl, (ix + 15)
	ld	(ix - 15), hl
	ld	l, (ix + 18)
	ld	(ix - 16), l
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	de, 1
	push	bc
	pop	hl
	sbc	hl, de
	ld	hl, 0
	call	pe, __setflag
	jp	p, BB15_2
	push	hl
	pop	bc
BB15_2:
	ld	de, (ix - 3)
	ld	e, a
	ld	(ix - 3), de
	ld	(ix - 6), hl
BB15_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB15_15
	ld	hl, (ix - 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 9), iy
	ld	(ix - 12), bc
	jr	nz, BB15_6
	ld	hl, (iy)
	ld	e, (iy + 3)
	push	de
	push	hl
	ld	hl, _.str.6.10
	push	hl
	call	_printf
	pop	hl
	pop	hl
	jr	BB15_12
BB15_6:
	ld	a, (ix - 16)
	cp	a, 2
	jr	nz, BB15_8
	ld	l, (iy)
	push	hl
	call	__Z15NumTools_toHex2h
	jr	BB15_11
BB15_8:
	cp	a, 4
	jr	nz, BB15_10
	ld	hl, (iy)
	push	hl
	call	__Z15NumTools_toHex4j
	jr	BB15_11
BB15_10:
	ld	hl, (iy)
	ld	e, (iy + 3)
	push	de
	push	hl
	call	__Z15NumTools_toHex8m
	pop	de
BB15_11:
	pop	de
	push	hl
	ld	hl, _.str.2.8
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	hl, _.str.5.9
	push	hl
	call	_printf
BB15_12:
	pop	hl
	ld	bc, (ix - 6)
	inc	bc
	push	bc
	pop	hl
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB15_14
	ld	hl, _.str.4.11
	push	hl
	call	_printf
	pop	hl
	ld	bc, 0
BB15_14:
	ld	(ix - 6), bc
	ld	iy, (ix - 9)
	lea	iy, iy + 4
	ld	bc, (ix - 12)
	dec	bc
	jp	BB15_3
BB15_15:
	ld	hl, 10
	ld	(ix + 6), hl
	ld	sp, ix
	pop	ix
	jp	_putchar
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z21NumTools_printArray_bPhihi
__Z21NumTools_printArray_bPhihi:
	ld	hl, -12
	call	__frameset
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	iy, 0
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB16_2
	lea	bc, iy
BB16_2:
	ld	hl, (ix + 6)
	ld	(ix - 3), hl
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	(ix - 12), hl
	ld	(ix - 6), iy
BB16_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB16_10
	ld	(ix - 9), bc
	ld	hl, (ix - 3)
	ld	a, (hl)
	ld	hl, (ix + 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB16_6
	ex	de, hl
	ld	l, a
	push	hl
	ld	hl, _.str.3.12
	jr	BB16_7
BB16_6:
	ld	l, a
	push	hl
	call	__Z15NumTools_toHex2h
	pop	de
	push	hl
	ld	hl, _.str.2.8
BB16_7:
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	bc, (ix - 6)
	inc	bc
	push	bc
	pop	hl
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB16_9
	ld	hl, _.str.4.11
	push	hl
	call	_printf
	ld	bc, 0
	pop	hl
BB16_9:
	ld	(ix - 6), bc
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	bc, (ix - 9)
	dec	bc
	ld	iy, 0
	lea	de, iy
	jr	BB16_3
BB16_10:
	ld	hl, _.str.4.11
	push	hl
	call	_printf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z11sha512_hashPhl
__Z11sha512_hashPhl:
	ld	hl, -58
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 55), hl
	ld	hl, (ix + 9)
	ld	e, (ix + 12)
	ld	iy, 0
	ld	bc, 1
	xor	a, a
	ld	(_lastBlock), iy
	ld	(ix - 51), hl
	ld	(ix - 52), e
	call	__lcmps
	call	pe, __setflag
	ld	hl, 1
	jp	m, BB17_2
	ld	hl, 0
BB17_2:
	ld	(_usePadding), hl
	ld	(_paddingFirstByte), hl
	ld	de, 0
	ld	(_paddingRemainingBytes), de
	ld	(_paddingRemainingBytes+3), a
	ld	hl, -4404984
	ld	(_h), hl
	ld	hl, -1677325
	ld	(_h+3), hl
	ld	iy, _h
	lea	hl, iy + 6
	ld	(ix - 33), hl
	ld.sis	bc, 27145
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, -3496133
	ld	(_h+8), hl
	ld	hl, -5339772
	ld	(_h+11), hl
	ld	iy, _h+8
	lea	hl, iy + 6
	ld	(ix - 30), hl
	ld.sis	bc, -17561
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, -7014357
	ld	(_h+16), hl
	ld	hl, -822530
	ld	(_h+19), hl
	ld	iy, _h+16
	lea	hl, iy + 6
	ld	(ix - 27), hl
	ld.sis	bc, 15470
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, 1914609
	ld	(_h+24), hl
	ld	hl, -705953
	ld	(_h+27), hl
	ld	iy, _h+24
	lea	hl, iy + 6
	ld	(ix - 24), hl
	ld.sis	bc, -23217
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, -1670447
	ld	(_h+32), hl
	ld	hl, 5406637
	ld	(_h+35), hl
	ld	iy, _h+32
	lea	hl, iy + 6
	ld	(ix - 21), hl
	ld.sis	bc, 20750
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, 4090911
	ld	(_h+40), hl
	ld	hl, 6851627
	ld	(_h+43), hl
	ld	iy, _h+40
	lea	hl, iy + 6
	ld	(ix - 18), hl
	ld.sis	bc, -25851
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, 4308331
	ld	(_h+48), hl
	ld	hl, -2511877
	ld	(_h+51), hl
	ld	iy, _h+48
	lea	hl, iy + 6
	ld	(ix - 15), hl
	ld.sis	bc, 8067
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, 8266105
	ld	(_h+56), hl
	ld	hl, -3335917
	ld	(_h+59), hl
	ld	iy, _h+56
	lea	hl, iy + 6
	ld	(ix - 12), hl
	ld.sis	bc, 23520
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	iy, _block128+112
	lea	hl, iy + 6
	ld	(ix - 58), hl
	push	de
	pop	hl
	ld	(ix - 9), de
BB17_3:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB17_26
	ld	de, 0
	ld	(ix - 6), de
BB17_5:
	ld	(ix - 3), de
	ex	de, hl
	ld	de, 128
	or	a, a
	sbc	hl, de
	jp	z, BB17_19
	call	__Z12updateMicrosv
	ld	hl, (_usePadding)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB17_11
	ld	hl, (ix - 55)
	ld	bc, (ix - 9)
	add	hl, bc
	inc	bc
	ld	a, (hl)
	ld	hl, _block128
	ld	de, (ix - 3)
	add	hl, de
	ld	(hl), a
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	iy
	ld	hl, (ix - 51)
	ld	e, (ix - 52)
	ld	a, iyl
	call	__lcmpu
	jp	nz, BB17_17
	ld	hl, 1
	ld	(_usePadding), hl
	ld	(_paddingFirstByte), hl
	ld	hl, (ix - 3)
	ld	de, 111
	or	a, a
	sbc	hl, de
	ld	hl, 111
	jr	c, BB17_10
	ld	hl, 239
BB17_10:
	ld	de, (ix - 6)
	add	hl, de
	push	hl
	pop	de
	push	de
	pop	iy
	add	iy, iy
	push	de
	pop	iy
	sbc	hl, hl
	push	hl
	pop	de
	jp	BB17_16
BB17_11:
	ld	hl, (_paddingFirstByte)
	ld	de, 1
	or	a, a
	sbc	hl, de
	jr	nz, BB17_13
	or	a, a
	sbc	hl, hl
	ld	(_paddingFirstByte), hl
	ld	hl, _block128
	ld	de, (ix - 3)
	add	hl, de
	ld	(hl), -128
	ld	hl, (_paddingRemainingBytes)
	ld	a, (_paddingRemainingBytes+3)
	jr	BB17_15
BB17_13:
	ld	hl, (_paddingRemainingBytes)
	ld	a, (_paddingRemainingBytes+3)
	ld	e, a
	call	__lcmpzero
	jp	z, BB17_18
	ld	iy, _block128
	ld	de, (ix - 3)
	add	iy, de
	ld	(iy), 0
BB17_15:
	ld	e, a
	ld	bc, -1
	ld	a, b
	call	__ladd
	push	hl
	pop	iy
	ld	bc, (ix - 9)
BB17_16:
	ld	(_paddingRemainingBytes), iy
	ld	a, e
	ld	(_paddingRemainingBytes+3), a
BB17_17:
	ld	de, (ix - 3)
	inc	de
	ld	hl, (ix - 6)
	dec	hl
	ld	(ix - 6), hl
	ld	(ix - 9), bc
	jp	BB17_5
BB17_18:
	ld	hl, 1
	ld	(_lastBlock), hl
	ld	de, (ix - 51)
	ld	a, e
	ld	b, 3
	call	__bshl
	ld	(_block128+127), a
	push	de
	pop	bc
	ld	h, (ix - 52)
	ld	a, h
	ld	l, 5
	call	__lshru
	ld	a, c
	ld	(_block128+126), a
	push	de
	pop	bc
	ld	a, h
	ld	l, 13
	call	__lshru
	ld	a, c
	ld	(_block128+125), a
	push	de
	pop	bc
	ld	a, h
	ld	l, 21
	call	__lshru
	ld	a, c
	ld	(_block128+124), a
	push	de
	pop	bc
	ld	a, h
	ld	l, 29
	call	__lshrs
	ld	(ix - 52), a
	ld	a, c
	ld	(_block128+120), a
	ld	(_block128+121), a
	ld	(_block128+122), a
	ld	(ix - 51), bc
	ld	(_block128+123), a
	or	a, a
	sbc	hl, hl
	ld	(_block128+112), hl
	ld	(_block128+115), hl
	ld	iy, (ix - 58)
	ld	(iy), l
	ld	(iy + 1), h
BB17_19:
	or	a, a
	sbc	hl, hl
BB17_20:
	push	hl
	pop	bc
	ld	de, 128
	or	a, a
	sbc	hl, de
	jp	z, BB17_22
	push	bc
	pop	de
	ld	(ix - 6), de
	ld	(ix - 36), de
	ld	hl, _block128+3
	add	hl, de
	ld	(ix - 3), hl
	ld	bc, 0
	push	bc
	pop	hl
	ld	iy, (ix - 3)
	ld	l, (iy + 4)
	ld	(ix - 42), hl
	ld	hl, _M
	add	hl, de
	ld	(ix - 39), hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy + 3)
	ld	de, 8
	push	de
	push	bc
	pop	de
	call	__llshl
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, (ix - 42)
	push	iy
	call	__lladd
	ld	(ix - 42), hl
	ld	(ix - 45), de
	ld	(ix - 48), bc
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy + 2)
	ld	de, 16
	push	de
	ld	de, 0
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 42)
	ld	de, (ix - 45)
	ld	bc, (ix - 48)
	call	__lladd
	ld	(ix - 42), hl
	ld	(ix - 45), de
	ld	(ix - 48), bc
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy + 1)
	ld	de, 24
	push	de
	ld	de, 0
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 42)
	ld	de, (ix - 45)
	ld	bc, (ix - 48)
	call	__lladd
	ld	(ix - 42), hl
	ld	(ix - 45), de
	ld	(ix - 48), bc
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy)
	ld	de, 32
	push	de
	ld	de, 0
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 42)
	ld	de, (ix - 45)
	ld	bc, (ix - 48)
	call	__lladd
	ld	(ix - 42), hl
	ld	(ix - 45), de
	ld	(ix - 48), bc
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy - 1)
	ld	de, 40
	push	de
	ld	de, 0
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 42)
	ld	de, (ix - 45)
	ld	bc, (ix - 48)
	call	__lladd
	ld	(ix - 42), hl
	ld	(ix - 45), de
	ld	(ix - 48), bc
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy - 2)
	ld	de, 48
	push	de
	ld	de, 0
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 42)
	ld	de, (ix - 45)
	ld	bc, (ix - 48)
	call	__llor
	ld	(ix - 42), hl
	ld	(ix - 45), de
	ld	(ix - 48), bc
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	iy, (ix - 3)
	ld	l, (iy - 3)
	ld	de, 56
	push	de
	ld	de, 0
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 42)
	ld	de, (ix - 45)
	ld	bc, (ix - 48)
	call	__llor
	ld	(ix - 3), de
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 39)
	ld	(iy), hl
	ld	(iy + 3), de
	ld	(iy + 6), c
	ld	(iy + 7), b
	ld	iy, _W
	ld	de, (ix - 36)
	add	iy, de
	ld	(iy), hl
	ld	hl, (ix - 3)
	ld	(iy + 3), hl
	ld	(iy + 6), c
	ld	(iy + 7), b
	ld	hl, (ix - 6)
	ld	de, 8
	add	hl, de
	jp	BB17_20
BB17_22:
	or	a, a
	sbc	hl, hl
BB17_23:
	push	hl
	pop	bc
	ld	de, 512
	or	a, a
	sbc	hl, de
	jp	z, BB17_25
	push	bc
	pop	de
	ld	iy, _W
	add	iy, bc
	ld	(ix - 3), iy
	ld	hl, (iy + 112)
	ld	(ix - 6), hl
	ld	hl, (iy + 115)
	ld	bc, (iy + 118)
	push	bc
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	(ix - 6), de
	call	__Z4rho1y
	ld	(ix - 36), hl
	ld	(ix - 39), de
	pop	de
	pop	de
	pop	de
	ld	iy, (ix - 3)
	ld	hl, (iy + 72)
	ld	(ix - 45), hl
	ld	de, (iy + 75)
	lea	hl, iy
	ld	iy, (iy + 78)
	ld	(ix - 42), iy
	push	hl
	pop	iy
	push	bc
	ld	bc, (ix - 39)
	push	bc
	ld	bc, (ix - 36)
	push	bc
	ld	hl, (ix - 45)
	ld	bc, (ix - 42)
	call	__lladd
	ld	(ix - 36), hl
	ld	(ix - 39), de
	ld	(ix - 42), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (iy + 8)
	ld	de, (iy + 11)
	ld	bc, (iy + 14)
	push	bc
	push	de
	push	hl
	call	__Z4rho0y
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 36)
	ld	de, (ix - 39)
	ld	bc, (ix - 42)
	call	__lladd
	ld	(ix - 36), hl
	ld	(ix - 39), de
	ld	(ix - 42), bc
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 3)
	ld	bc, (iy)
	ld	de, (iy + 3)
	ld	hl, (iy + 6)
	push	hl
	push	de
	push	bc
	ld	hl, (ix - 36)
	ld	de, (ix - 39)
	ld	bc, (ix - 42)
	call	__lladd
	ld	(ix - 36), bc
	pop	iy
	pop	iy
	pop	iy
	ld	bc, 128
	ld	iy, (ix - 3)
	add	iy, bc
	lea	bc, iy
	ld	(iy), hl
	lea	hl, iy + 3
	ld	(hl), de
	lea	hl, iy + 6
	ld	de, (ix - 36)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	de, 8
	ld	hl, (ix - 6)
	add	hl, de
	jp	BB17_23
BB17_25:
	ld	hl, _W
	push	hl
	call	__Z16sha512_calculatePy
	pop	hl
	ld	hl, (_lastBlock)
	jp	BB17_3
BB17_26:
	ld	iy, (_h)
	ld	de, (_h+3)
	ld	hl, (ix - 33)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcpy
	pop	hl
	pop	hl
	ld	iy, (_h+8)
	ld	de, (_h+11)
	ld	hl, (ix - 30)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	iy, (_h+16)
	ld	de, (_h+19)
	ld	hl, (ix - 27)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	iy, (_h+24)
	ld	de, (_h+27)
	ld	hl, (ix - 24)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	iy, (_h+32)
	ld	de, (_h+35)
	ld	hl, (ix - 21)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	iy, (_h+40)
	ld	de, (_h+43)
	ld	hl, (ix - 18)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	iy, (_h+48)
	ld	de, (_h+51)
	ld	hl, (ix - 15)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, _finalHashArr
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	iy, (_h+56)
	ld	de, (_h+59)
	ld	hl, (ix - 12)
	ld	bc, (hl)
	push	bc
	push	de
	push	iy
	call	__Z16NumTools_toHex16y
	pop	de
	pop	de
	pop	de
	ld	de, _finalHashArr
	ld	(ix + 6), de
	ld	(ix + 9), hl
	ld	sp, ix
	pop	ix
	jp	_strcat
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z16sha512_calculatePy
__Z16sha512_calculatePy:
	ld	hl, -246
	call	__frameset
	ld	iy, _h
	or	a, a
	sbc	hl, hl
	ld	(ix - 57), hl
	ld	bc, (_h)
	ld	de, -141
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (_h+3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -144
	add	ix, bc
	ld	(ix), de
	pop	ix
	lea	hl, iy + 6
	ld	bc, -177
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (hl)
	ld	(ix - 84), hl
	ld	bc, (ix - 3)
	ld	(_aa), bc
	ld	(_aa+3), de
	ld	iy, _aa
	lea	hl, iy + 6
	ld	bc, -180
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 84)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, (_h+8)
	ld	de, -135
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (_h+11)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -138
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	iy, _h+8
	lea	hl, iy + 6
	ld	bc, -174
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (hl)
	ld	(ix - 81), hl
	ld	bc, (ix - 3)
	ld	(_bb), bc
	ld	(_bb+3), de
	ld	iy, _bb
	lea	hl, iy + 6
	ld	bc, -183
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 81)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, (_h+16)
	ld	de, -129
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (_h+19)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -132
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	iy, _h+16
	lea	hl, iy + 6
	ld	bc, -171
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (hl)
	ld	(ix - 78), hl
	ld	bc, (ix - 3)
	ld	(_cc), bc
	ld	(_cc+3), de
	ld	iy, _cc
	lea	hl, iy + 6
	ld	bc, -186
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 78)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, (_h+24)
	ld	(ix - 123), bc
	ld	de, (_h+27)
	ld	(ix - 126), de
	ld	iy, _h+24
	lea	hl, iy + 6
	ld	(ix - 3), de
	ld	de, -168
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	hl, (hl)
	ld	(ix - 75), hl
	ld	(_dd), bc
	ld	de, (ix - 3)
	ld	(_dd+3), de
	ld	iy, _dd
	lea	hl, iy + 6
	ld	bc, -189
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 75)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, (_h+32)
	ld	(ix - 117), bc
	ld	de, (_h+35)
	ld	(ix - 120), de
	ld	iy, _h+32
	lea	hl, iy + 6
	ld	(ix - 3), de
	ld	de, -165
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	hl, (hl)
	ld	(ix - 72), hl
	ld	(_ee), bc
	ld	de, (ix - 3)
	ld	(_ee+3), de
	ld	iy, _ee
	lea	hl, iy + 6
	ld	bc, -192
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 72)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, (_h+40)
	ld	(ix - 111), bc
	ld	de, (_h+43)
	ld	(ix - 114), de
	ld	iy, _h+40
	lea	hl, iy + 6
	ld	(ix - 3), de
	ld	de, -162
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	hl, (hl)
	ld	(ix - 69), hl
	ld	(_ff), bc
	ld	de, (ix - 3)
	ld	(_ff+3), de
	ld	iy, _ff
	lea	hl, iy + 6
	ld	bc, -195
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 69)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, (_h+48)
	ld	(ix - 105), bc
	ld	de, (_h+51)
	ld	(ix - 108), de
	ld	iy, _h+48
	lea	hl, iy + 6
	ld	(ix - 3), de
	ld	de, -150
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	hl, (hl)
	ld	(ix - 66), hl
	ld	(_gg), bc
	ld	de, (ix - 3)
	ld	(_gg+3), de
	ld	iy, _gg
	lea	hl, iy + 6
	ld	bc, -198
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, (ix - 66)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	de, (_h+56)
	ld	bc, (_h+59)
	ld	iy, _h+56
	lea	hl, iy + 6
	ld	(ix - 3), bc
	ld	bc, -147
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (hl)
	ld	(_hh), de
	ld	bc, (ix - 3)
	ld	(_hh+3), bc
	ld	iy, _hh
	lea	iy, iy + 6
	ld	(ix - 3), bc
	push	ix
	ld	bc, -201
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	(iy), l
	ld	(iy + 1), h
	ld	bc, -153
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ld	(ix - 96), de
	ld	bc, (ix - 3)
	push	ix
	ld	de, -156
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	(ix - 99), bc
	push	ix
	ld	bc, -159
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	(ix - 102), hl
	ld	hl, (ix - 105)
	ld	(ix - 39), hl
	ld	hl, (ix - 108)
	ld	(ix - 42), hl
	ld	hl, (ix - 66)
	ld	(ix - 45), hl
	ld	hl, (ix - 111)
	ld	(ix - 51), hl
	ld	hl, (ix - 114)
	ld	(ix - 54), hl
	ld	hl, (ix - 69)
	ld	(ix - 48), hl
	ld	hl, (ix - 117)
	ld	(ix - 12), hl
	ld	hl, (ix - 120)
	ld	(ix - 9), hl
	ld	hl, (ix - 72)
	ld	(ix - 15), hl
	ld	hl, (ix - 123)
	ld	(ix - 87), hl
	ld	hl, (ix - 126)
	ld	(ix - 90), hl
	ld	hl, (ix - 75)
	ld	(ix - 93), hl
	ld	bc, -129
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 21), hl
	ld	bc, -132
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 24), hl
	ld	hl, (ix - 78)
	ld	(ix - 18), hl
	ld	bc, -135
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 27), hl
	ld	bc, -138
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 30), hl
	ld	hl, (ix - 81)
	ld	(ix - 33), hl
	ld	bc, -141
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	push	ix
	ld	bc, -144
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld	(ix - 36), hl
	ld	iy, (ix - 84)
BB18_1:
	ld	hl, (ix - 57)
	ld	bc, 640
	or	a, a
	sbc	hl, bc
	jp	z, BB18_3
	ld	(ix - 60), de
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	(ix - 63), iy
	call	__Z6sigma1y
	ld	(ix - 3), bc
	ld	bc, -204
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	ld	bc, -207
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -210
	add	ix, de
	ld	(ix), bc
	pop	ix
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 48)
	push	hl
	ld	hl, (ix - 54)
	push	hl
	ld	hl, (ix - 51)
	push	hl
	ld	hl, (ix - 12)
	ld	de, (ix - 3)
	ld	de, (ix - 9)
	ld	bc, (ix - 15)
	call	__lland
	ld	(ix - 3), bc
	push	ix
	ld	bc, -231
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -234
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -237
	add	ix, de
	ld	(ix), bc
	pop	ix
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 12)
	ld	de, (ix - 3)
	ld	de, (ix - 9)
	ld	bc, (ix - 15)
	call	__llnot
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 39)
	ld	de, (ix - 42)
	ld	bc, (ix - 45)
	call	__lland
	ld	(ix - 3), bc
	push	ix
	ld	bc, -240
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -243
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -246
	add	ix, de
	ld	(ix), bc
	pop	ix
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 3)
	ld	de, (ix - 57)
	ld	iy, _k
	add	iy, de
	ld	hl, (iy)
	push	ix
	ld	bc, -222
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 3)
	push	ix
	ld	bc, -225
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 6)
	ld	bc, -228
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	iy, (ix + 6)
	add	iy, de
	ld	hl, (iy)
	push	ix
	ld	bc, -213
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 3)
	push	ix
	ld	bc, -216
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy + 6)
	ld	bc, -219
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, (ix - 102)
	push	hl
	ld	hl, (ix - 99)
	push	hl
	ld	hl, (ix - 96)
	push	hl
	ld	bc, -231
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -234
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	(ix - 3), de
	push	ix
	ld	de, -237
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(ix - 3), bc
	ld	bc, -246
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -243
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -240
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, (ix - 3)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(ix - 3), bc
	ld	bc, -210
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -207
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -204
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, (ix - 3)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(ix - 3), bc
	ld	bc, -228
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -225
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -222
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, (ix - 3)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(ix - 3), bc
	ld	bc, -219
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -216
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, -213
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	iy
	ld	bc, (ix - 3)
	call	__lladd
	ld	(ix - 96), hl
	ld	(ix - 99), de
	ld	(ix - 102), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 63)
	push	hl
	ld	hl, (ix - 36)
	push	hl
	ld	hl, (ix - 60)
	push	hl
	call	__Z6sigma0y
	ld	(ix - 3), bc
	ld	bc, -204
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	ld	bc, -207
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -210
	add	ix, de
	ld	(ix), bc
	pop	ix
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 24)
	push	hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 27)
	ld	de, (ix - 3)
	ld	de, (ix - 30)
	ld	bc, (ix - 33)
	call	__llxor
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 63)
	push	iy
	ld	iy, (ix - 36)
	push	iy
	ld	iy, (ix - 60)
	push	iy
	call	__lland
	ld	(ix - 3), bc
	ld	bc, -213
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	ld	bc, -216
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -219
	add	ix, de
	ld	(ix), bc
	pop	ix
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 24)
	push	hl
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix - 27)
	ld	de, (ix - 3)
	ld	de, (ix - 30)
	ld	bc, (ix - 33)
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	bc, -213
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -216
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -219
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__llxor
	ld	(ix - 3), bc
	push	ix
	ld	bc, -213
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	ix
	ld	bc, -216
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -219
	add	ix, de
	ld	(ix), bc
	pop	ix
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 39)
	ld	(_hh), hl
	ld	hl, (ix - 42)
	ld	(_hh+3), hl
	ld	bc, -201
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, (ix - 3)
	ld	de, (ix - 45)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	hl, (ix - 51)
	ld	(_gg), hl
	ld	hl, (ix - 54)
	ld	(_gg+3), hl
	ld	bc, -198
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, (ix - 48)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	hl, (ix - 12)
	ld	(_ff), hl
	ld	hl, (ix - 9)
	ld	(_ff+3), hl
	ld	bc, -195
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, (ix - 15)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	hl, (ix - 93)
	push	hl
	ld	hl, (ix - 90)
	push	hl
	ld	hl, (ix - 87)
	push	hl
	ld	hl, (ix - 96)
	ld	de, (ix - 99)
	ld	bc, (ix - 102)
	call	__lladd
	ld	(ix - 87), hl
	ld	(ix - 90), de
	ld	(ix - 93), bc
	pop	iy
	pop	iy
	pop	iy
	ld	(_ee), hl
	ld	(_ee+3), de
	ld	de, -192
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, (ix - 21)
	ld	(_dd), hl
	ld	hl, (ix - 24)
	ld	(_dd+3), hl
	ld	bc, -189
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, (ix - 18)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	hl, (ix - 27)
	ld	(_cc), hl
	ld	hl, (ix - 30)
	ld	(_cc+3), hl
	ld	bc, -186
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, (ix - 33)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	hl, (ix - 60)
	ld	(_bb), hl
	ld	hl, (ix - 36)
	ld	(_bb+3), hl
	ld	bc, -183
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, (ix - 63)
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	bc, -219
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -216
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -213
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -204
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -207
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -210
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 102)
	push	iy
	ld	iy, (ix - 99)
	push	iy
	ld	iy, (ix - 96)
	push	iy
	call	__lladd
	ld	(ix - 3), bc
	ld	bc, -204
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	pop	iy
	pop	iy
	pop	iy
	ld	(_aa), hl
	ld	(_aa+3), de
	ld	de, -180
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	bc, (ix - 3)
	ld	(iy), c
	ld	(iy + 1), b
	ld	de, 8
	ld	iy, (ix - 57)
	add	iy, de
	ld	(ix - 57), iy
	ld	de, (ix - 39)
	ld	(ix - 96), de
	ld	de, (ix - 42)
	ld	(ix - 99), de
	ld	de, (ix - 45)
	ld	(ix - 102), de
	ld	de, (ix - 51)
	ld	(ix - 39), de
	ld	de, (ix - 54)
	ld	(ix - 42), de
	ld	de, (ix - 48)
	ld	iyl, e
	ld	iyh, d
	ld	(ix - 45), iy
	ld	de, (ix - 12)
	ld	(ix - 51), de
	ld	de, (ix - 9)
	ld	(ix - 54), de
	ld	de, (ix - 15)
	ld	(ix - 48), de
	ld	de, (ix - 87)
	ld	(ix - 12), de
	ld	de, (ix - 90)
	ld	(ix - 9), de
	ld	de, (ix - 93)
	ld	(ix - 15), de
	ld	de, (ix - 21)
	ld	(ix - 87), de
	ld	de, (ix - 24)
	ld	(ix - 90), de
	ld	de, (ix - 18)
	ld	(ix - 93), de
	ld	de, (ix - 27)
	ld	(ix - 21), de
	ld	de, (ix - 30)
	ld	(ix - 24), de
	ld	de, (ix - 33)
	ld	iyl, e
	ld	iyh, d
	ld	(ix - 18), iy
	ld	de, (ix - 60)
	ld	(ix - 27), de
	ld	de, (ix - 36)
	ld	(ix - 30), de
	ld	de, (ix - 63)
	ld	(ix - 33), de
	ex	de, hl
	ld	(ix - 3), de
	ld	de, -204
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 36), hl
	ld	iyl, c
	ld	iyh, b
	ld	de, (ix - 3)
	jp	BB18_1
BB18_3:
	ld	hl, (ix - 84)
	push	hl
	ld	bc, -144
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -141
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ex	de, hl
	ld	de, (ix - 36)
	ld	c, iyl
	ld	b, iyh
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h), hl
	ld	(_h+3), de
	ld	de, -177
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, (ix - 81)
	push	hl
	ld	bc, -138
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -135
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix - 27)
	ld	de, (ix - 30)
	ld	bc, (ix - 33)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h+8), hl
	ld	(_h+11), de
	ld	de, -174
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, (ix - 78)
	push	hl
	ld	bc, -132
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -129
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix - 21)
	ld	de, (ix - 24)
	ld	bc, (ix - 18)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h+16), hl
	ld	(_h+19), de
	ld	de, -171
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, (ix - 75)
	push	hl
	ld	hl, (ix - 126)
	push	hl
	ld	hl, (ix - 123)
	push	hl
	ld	hl, (ix - 87)
	ld	de, (ix - 90)
	ld	bc, (ix - 93)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h+24), hl
	ld	(_h+27), de
	ld	de, -168
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, (ix - 72)
	push	hl
	ld	hl, (ix - 120)
	push	hl
	ld	hl, (ix - 117)
	push	hl
	ld	hl, (ix - 12)
	ld	de, (ix - 9)
	ld	bc, (ix - 15)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h+32), hl
	ld	(_h+35), de
	ld	de, -165
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, (ix - 69)
	push	hl
	ld	hl, (ix - 114)
	push	hl
	ld	hl, (ix - 111)
	push	hl
	ld	hl, (ix - 51)
	ld	de, (ix - 54)
	ld	bc, (ix - 48)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h+40), hl
	ld	(_h+43), de
	ld	de, -162
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, (ix - 66)
	push	hl
	ld	hl, (ix - 108)
	push	hl
	ld	hl, (ix - 105)
	push	hl
	ld	hl, (ix - 39)
	ld	de, (ix - 42)
	ld	bc, (ix - 45)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h+48), hl
	ld	(_h+51), de
	ld	de, -150
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	bc, -159
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -156
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -153
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix - 96)
	ld	de, (ix - 99)
	ld	bc, (ix - 102)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	(_h+56), hl
	ld	(_h+59), de
	ld	de, -147
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4rho1y
__Z4rho1y:
	ld	hl, -18
	call	__frameset
	ld	de, (ix + 6)
	ld	bc, (ix + 9)
	ld	hl, (ix + 12)
	ld	iy, 19
	push	iy
	push	hl
	push	bc
	push	de
	call	__Z3roryi
	ld	(ix - 6), hl
	ld	(ix - 9), de
	ld	(ix - 12), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 61
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__Z3roryi
	ld	(ix - 3), hl
	ld	(ix - 15), de
	ld	(ix - 18), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 6
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llshru
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 6)
	ld	de, (ix - 9)
	ld	bc, (ix - 12)
	call	__llxor
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 18)
	push	iy
	ld	iy, (ix - 15)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llxor
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z4rho0y
__Z4rho0y:
	ld	hl, -18
	call	__frameset
	ld	de, (ix + 6)
	ld	bc, (ix + 9)
	ld	hl, (ix + 12)
	ld	iy, 1
	push	iy
	push	hl
	push	bc
	push	de
	call	__Z3roryi
	ld	(ix - 6), hl
	ld	(ix - 9), de
	ld	(ix - 12), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 8
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__Z3roryi
	ld	(ix - 3), hl
	ld	(ix - 15), de
	ld	(ix - 18), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llshru
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 6)
	ld	de, (ix - 9)
	ld	bc, (ix - 12)
	call	__llxor
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 18)
	push	iy
	ld	iy, (ix - 15)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llxor
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3roryi
__Z3roryi:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 12)
	ld	(ix - 3), hl
	ld	de, (ix + 15)
	ld	iy, 0
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	call	pe, __setflag
	jp	p, BB21_2
	lea	bc, iy
BB21_2:
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	(ix - 6), hl
	ld	de, 63
BB21_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB21_5
	push	de
	lea	hl, iy
	ld	de, (ix - 6)
	ld	(ix - 9), bc
	ld	bc, (ix - 3)
	call	__llshl
	ld	(ix - 12), hl
	ld	(ix - 15), de
	ld	(ix - 18), bc
	pop	hl
	ld	hl, 1
	push	hl
	lea	hl, iy
	ld	de, (ix - 6)
	ld	bc, (ix - 3)
	call	__llshru
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 12)
	ld	de, (ix - 15)
	ld	bc, (ix - 18)
	call	__llor
	push	hl
	pop	iy
	ld	(ix - 6), de
	ld	de, 63
	ld	(ix - 3), bc
	ld	bc, (ix - 9)
	pop	hl
	pop	hl
	pop	hl
	dec	bc
	jp	BB21_3
BB21_5:
	lea	hl, iy
	ld	de, (ix - 6)
	ld	bc, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z6sigma1y
__Z6sigma1y:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 6)
	ld	bc, (ix + 9)
	ld	hl, (ix + 12)
	ld	iy, 14
	push	iy
	push	hl
	push	bc
	push	de
	call	__Z3roryi
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 18
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__Z3roryi
	pop	iy
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 9)
	push	iy
	ld	iy, (ix - 6)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llxor
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 41
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__Z3roryi
	pop	iy
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	ld	bc, (ix - 9)
	call	__llxor
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z6sigma0y
__Z6sigma0y:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 6)
	ld	bc, (ix + 9)
	ld	hl, (ix + 12)
	ld	iy, 28
	push	iy
	push	hl
	push	bc
	push	de
	call	__Z3roryi
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 34
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__Z3roryi
	pop	iy
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 9)
	push	iy
	ld	iy, (ix - 6)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llxor
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 39
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	__Z3roryi
	pop	iy
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	ld	bc, (ix - 9)
	call	__llxor
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z2Chyyy
__Z2Chyyy:
	ld	hl, -9
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (ix + 12)
	ld	bc, (ix + 21)
	push	hl
	push	de
	push	iy
	ld	hl, (ix + 15)
	ld	de, (ix + 18)
	call	__lland
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	hl
	pop	hl
	pop	hl
	lea	hl, iy
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llnot
	ld	iy, (ix + 30)
	push	iy
	ld	iy, (ix + 27)
	push	iy
	ld	iy, (ix + 24)
	push	iy
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 9)
	push	iy
	ld	iy, (ix - 6)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llor
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3Majyyy
__Z3Majyyy:
	ld	hl, -9
	call	__frameset
	ld	bc, (ix + 18)
	ld	hl, (ix + 21)
	ld	de, (ix + 27)
	ld	iy, (ix + 30)
	push	hl
	push	bc
	ld	bc, (ix + 15)
	push	bc
	ld	hl, (ix + 24)
	ld	c, iyl
	ld	b, iyh
	call	__llxor
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix + 12)
	push	iy
	ld	iy, (ix + 9)
	push	iy
	ld	iy, (ix + 6)
	push	iy
	call	__lland
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 21)
	push	hl
	ld	hl, (ix + 18)
	push	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 24)
	ld	de, (ix + 27)
	ld	bc, (ix + 30)
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	ld	bc, (ix - 9)
	call	__llxor
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__Z3rolyi
__Z3rolyi:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 12)
	ld	(ix - 3), hl
	ld	de, (ix + 15)
	ld	iy, 0
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	call	pe, __setflag
	jp	p, BB26_2
	lea	bc, iy
BB26_2:
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	ld	(ix - 6), hl
	ld	de, 1
BB26_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB26_5
	push	de
	lea	hl, iy
	ld	de, (ix - 6)
	ld	(ix - 9), bc
	ld	bc, (ix - 3)
	call	__llshl
	ld	(ix - 12), hl
	ld	(ix - 15), de
	ld	(ix - 18), bc
	pop	hl
	ld	hl, 63
	push	hl
	lea	hl, iy
	ld	de, (ix - 6)
	ld	bc, (ix - 3)
	call	__llshru
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 12)
	ld	de, (ix - 15)
	ld	bc, (ix - 18)
	call	__llor
	push	hl
	pop	iy
	ld	(ix - 6), de
	ld	de, 1
	ld	(ix - 3), bc
	ld	bc, (ix - 9)
	pop	hl
	pop	hl
	pop	hl
	dec	bc
	jp	BB26_3
BB26_5:
	lea	hl, iy
	ld	de, (ix - 6)
	ld	bc, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_msg
_msg:
	rb	1100

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"log1.txt", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"wt", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	" Agon Light 2 (Zilog eZ80F92 Acclaim! CPU)", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"[2024/09/09 13:10 NZT]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"[  SHA-512 hashing test calculation over different strings  ]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"[   -- measure of time used for calculation of SHA-512 --   ]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"[            -- over different string lengths  --           ]", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"=============================================================", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"Test 1", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"======", 10, 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s0
__ZL2s0:
	db	"The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.", 0, 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"%d |%6.6lx|%6.6lx|%lu [us]||%s|%s|(%d)", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.11
_.str.11:
	db	"Test 2", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s1
__ZL2s1:
	db	"abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvwxyz.,;:!@#$^&*()-+=_abcdefghijklmnopqrstuvw", 0, 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"Test 3", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s2
__ZL2s2:
	db	"0123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedcba98765432100123456789abcdef0123456789ABCDEFFEDCBA9876543210fedc", 0, 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"Test 4", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s3
__ZL2s3:
	db	

	section	.rodata,"a",@progbits
	private	_.str.15
_.str.15:
	db	"Test 5", 10, 0

	section	.rodata,"a",@progbits
	private	__ZL2s4
__ZL2s4:
	db	

	section	.rodata,"a",@progbits
	private	_.str.16
_.str.16:
	db	"[END]", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_str
_str:
	db	" Agon Light 2 (Zilog eZ80F92 Acclaim! CPU)", 0

	section	.rodata,"a",@progbits
	private	_str.17
_str.17:
	db	"[2024/09/09 13:10 NZT]", 0

	section	.rodata,"a",@progbits
	private	_str.18
_str.18:
	db	"[  SHA-512 hashing test calculation over different strings  ]", 0

	section	.rodata,"a",@progbits
	private	_str.19
_str.19:
	db	"[   -- measure of time used for calculation of SHA-512 --   ]", 0

	section	.rodata,"a",@progbits
	private	_str.20
_str.20:
	db	"[            -- over different string lengths  --           ]", 0

	section	.rodata,"a",@progbits
	private	_str.21
_str.21:
	db	"=============================================================", 10, 0

	section	.rodata,"a",@progbits
	private	_str.22
_str.22:
	db	"Test 1", 0

	section	.rodata,"a",@progbits
	private	_str.24
_str.24:
	db	"Test 2", 0

	section	.rodata,"a",@progbits
	private	_str.27
_str.27:
	db	"Test 3", 0

	section	.rodata,"a",@progbits
	private	_str.30
_str.30:
	db	"Test 4", 0

	section	.rodata,"a",@progbits
	private	_str.33
_str.33:
	db	"Test 5", 0

	section	.rodata,"a",@progbits
	private	_str.34
_str.34:
	db	"======", 10, 0

	section	.rodata,"a",@progbits
	private	_str.36
_str.36:
	db	"[END]", 10, 0

	section	.bss,"aw",@nobits
	public	_nmtmp0
_nmtmp0:
	rb	64

	section	.bss,"aw",@nobits
	public	_nmtmp1
_nmtmp1:
	rb	128

	section	.bss,"aw",@nobits
	public	_nmtmp2
_nmtmp2:
	rb	256

	section	.bss,"aw",@nobits
	public	_TMR5_COUNTER_UPPER
_TMR5_COUNTER_UPPER:
	rb	1

	section	.rodata,"a",@progbits
	private	_.str.1.7
_.str.1.7:
	db	"===============================", 0

	section	.rodata,"a",@progbits
	private	_.str.2.8
_.str.2.8:
	db	"%s", 0

	section	.rodata,"a",@progbits
	private	_.str.3.12
_.str.3.12:
	db	"%d ", 0

	section	.rodata,"a",@progbits
	private	_.str.4.11
_.str.4.11:
	db	10, 0

	section	.rodata,"a",@progbits
	private	_.str.5.9
_.str.5.9:
	db	" ", 0

	section	.rodata,"a",@progbits
	private	_.str.6.10
_.str.6.10:
	db	"%lu ", 0

	section	.bss,"aw",@nobits
	public	_h
_h:
	rb	64

	section	.bss,"aw",@nobits
	public	_aa
_aa:
	rb	8

	section	.bss,"aw",@nobits
	public	_bb
_bb:
	rb	8

	section	.bss,"aw",@nobits
	public	_cc
_cc:
	rb	8

	section	.bss,"aw",@nobits
	public	_dd
_dd:
	rb	8

	section	.bss,"aw",@nobits
	public	_ee
_ee:
	rb	8

	section	.bss,"aw",@nobits
	public	_ff
_ff:
	rb	8

	section	.bss,"aw",@nobits
	public	_gg
_gg:
	rb	8

	section	.bss,"aw",@nobits
	public	_hh
_hh:
	rb	8

	section	.bss,"aw",@nobits
	public	_M
_M:
	rb	128

	section	.bss,"aw",@nobits
	public	_W
_W:
	rb	640

	section	.bss,"aw",@nobits
	public	_block128
_block128:
	rb	128

	section	.bss,"aw",@nobits
	public	_paddingRemainingBytes
_paddingRemainingBytes:
	rb	4

	section	.bss,"aw",@nobits
	public	_usePadding
_usePadding:
	rb	3

	section	.bss,"aw",@nobits
	public	_paddingFirstByte
_paddingFirstByte:
	rb	3

	section	.bss,"aw",@nobits
	public	_lastBlock
_lastBlock:
	rb	3

	section	.bss,"aw",@nobits
	public	_finalHashArr
_finalHashArr:
	rb	64

	section	.data,"aw",@progbits
	public	_k
_k:
	dq	4794697086780616226
	dq	8158064640168781261
	dq	-5349999486874862801
	dq	-1606136188198331460
	dq	4131703408338449720
	dq	6480981068601479193
	dq	-7908458776815382629
	dq	-6116909921290321640
	dq	-2880145864133508542
	dq	1334009975649890238
	dq	2608012711638119052
	dq	6128411473006802146
	dq	8268148722764581231
	dq	-9160688886553864527
	dq	-7215885187991268811
	dq	-4495734319001033068
	dq	-1973867731355612462
	dq	-1171420211273849373
	dq	1135362057144423861
	dq	2597628984639134821
	dq	3308224258029322869
	dq	5365058923640841347
	dq	6679025012923562964
	dq	8573033837759648693
	dq	-7476448914759557205
	dq	-6327057829258317296
	dq	-5763719355590565569
	dq	-4658551843659510044
	dq	-4116276920077217854
	dq	-3051310485924567259
	dq	489312712824947311
	dq	1452737877330783856
	dq	2861767655752347644
	dq	3322285676063803686
	dq	5560940570517711597
	dq	5996557281743188959
	dq	7280758554555802590
	dq	8532644243296465576
	dq	-9096487096722542874
	dq	-7894198246740708037
	dq	-6719396339535248540
	dq	-6333637450476146687
	dq	-4446306890439682159
	dq	-4076793802049405392
	dq	-3345356375505022440
	dq	-2983346525034927856
	dq	-860691631967231958
	dq	1182934255886127544
	dq	1847814050463011016
	dq	2177327727835720531
	dq	2830643537854262169
	dq	3796741975233480872
	dq	4115178125766777443
	dq	5681478168544905931
	dq	6601373596472566643
	dq	7507060721942968483
	dq	8399075790359081724
	dq	8693463985226723168
	dq	-8878714635349349518
	dq	-8302665154208450068
	dq	-8016688836872298968
	dq	-6606660893046293015
	dq	-4685533653050689259
	dq	-4147400797238176981
	dq	-3880063495543823972
	dq	-3348786107499101689
	dq	-1523767162380948706
	dq	-757361751448694408
	dq	500013540394364858
	dq	748580250866718886
	dq	1242879168328830382
	dq	1977374033974150939
	dq	2944078676154940804
	dq	3659926193048069267
	dq	4368137639120453308
	dq	4836135668995329356
	dq	5532061633213252278
	dq	6448918945643986474
	dq	6902733635092675308
	dq	7801388544844847127

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	__lland
	extern	__Unwind_SjLj_Register
	extern	__lcmpzero
	extern	__ishl
	extern	__ladd
	extern	_strlen
	extern	__setflag
	extern	_printf
	extern	__llshru
	extern	__lladd
	extern	__llor
	extern	_putchar
	extern	__lshru
	extern	_fwrite
	extern	__lshrs
	extern	__frameset
	extern	_fopen
	extern	__lmulu
	extern	__lsub
	extern	_mos_port_write
	extern	_fprintf
	extern	__llnot
	extern	_puts
	extern	__Unwind_SjLj_Unregister
	extern	_strcpy
	extern	_mos_port_read
	extern	_strcat
	extern	__llshl
	extern	__bshl
	extern	__lcmps
	extern	__lcmpu
	extern	__frameset0
	extern	__llxor
	extern	_fclose
